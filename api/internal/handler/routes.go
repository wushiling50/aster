// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package handler

import (
	"net/http"

	developer "github.com/wushiling50/aster/api/internal/handler/developer"
	languages "github.com/wushiling50/aster/api/internal/handler/languages"
	rank "github.com/wushiling50/aster/api/internal/handler/rank"
	"github.com/wushiling50/aster/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/:login",
				Handler: developer.GetDeveloperHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/:login/languages",
				Handler: developer.PostLanguageUsageTaskHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/:login/languages",
				Handler: developer.GetLanguageUsageHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/:login/nation",
				Handler: developer.PostNationTaskHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/:login/nation",
				Handler: developer.GetNationHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/:login/score",
				Handler: developer.PostScoreTaskHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/:login/score",
				Handler: developer.GetScoreHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/:login/summary",
				Handler: developer.PostSummaryTaskHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/:login/summary",
				Handler: developer.GetSummaryHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/developers"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/",
				Handler: languages.GetLanguagesHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/languages"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/",
				Handler: rank.GetScoreRankHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/rank"),
	)
}
