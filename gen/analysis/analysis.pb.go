// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.19.4
// source: idl/analysis.proto

package analysis

import (
	base "github.com/wushiling50/aster/gen/base"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ====== Analysis ======
type Languages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId        int64  `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`               // dataId
	DataCreatedAt int64  `protobuf:"varint,2,opt,name=dataCreatedAt,proto3" json:"dataCreatedAt,omitempty"` // dataCreatedAt
	DataUpdatedAt int64  `protobuf:"varint,3,opt,name=dataUpdatedAt,proto3" json:"dataUpdatedAt,omitempty"` // dataUpdatedAt
	Languages     string `protobuf:"bytes,4,opt,name=languages,proto3" json:"languages,omitempty"`          // languages
}

func (x *Languages) Reset() {
	*x = Languages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_analysis_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Languages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Languages) ProtoMessage() {}

func (x *Languages) ProtoReflect() protoreflect.Message {
	mi := &file_idl_analysis_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Languages.ProtoReflect.Descriptor instead.
func (*Languages) Descriptor() ([]byte, []int) {
	return file_idl_analysis_proto_rawDescGZIP(), []int{0}
}

func (x *Languages) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *Languages) GetDataCreatedAt() int64 {
	if x != nil {
		return x.DataCreatedAt
	}
	return 0
}

func (x *Languages) GetDataUpdatedAt() int64 {
	if x != nil {
		return x.DataUpdatedAt
	}
	return 0
}

func (x *Languages) GetLanguages() string {
	if x != nil {
		return x.Languages
	}
	return ""
}

type Nation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId        int64   `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`               // dataId
	DataCreatedAt int64   `protobuf:"varint,2,opt,name=dataCreatedAt,proto3" json:"dataCreatedAt,omitempty"` // dataCreatedAt
	DataUpdatedAt int64   `protobuf:"varint,3,opt,name=dataUpdatedAt,proto3" json:"dataUpdatedAt,omitempty"` // dataUpdatedAt
	Nation        string  `protobuf:"bytes,4,opt,name=nation,proto3" json:"nation,omitempty"`                // nation
	Confidence    float64 `protobuf:"fixed64,5,opt,name=confidence,proto3" json:"confidence,omitempty"`      // confidence
}

func (x *Nation) Reset() {
	*x = Nation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_analysis_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nation) ProtoMessage() {}

func (x *Nation) ProtoReflect() protoreflect.Message {
	mi := &file_idl_analysis_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nation.ProtoReflect.Descriptor instead.
func (*Nation) Descriptor() ([]byte, []int) {
	return file_idl_analysis_proto_rawDescGZIP(), []int{1}
}

func (x *Nation) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *Nation) GetDataCreatedAt() int64 {
	if x != nil {
		return x.DataCreatedAt
	}
	return 0
}

func (x *Nation) GetDataUpdatedAt() int64 {
	if x != nil {
		return x.DataUpdatedAt
	}
	return 0
}

func (x *Nation) GetNation() string {
	if x != nil {
		return x.Nation
	}
	return ""
}

func (x *Nation) GetConfidence() float64 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

type Score struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId        int64   `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`               // dataId
	DataCreatedAt int64   `protobuf:"varint,2,opt,name=dataCreatedAt,proto3" json:"dataCreatedAt,omitempty"` // dataCreatedAt
	DataUpdatedAt int64   `protobuf:"varint,3,opt,name=dataUpdatedAt,proto3" json:"dataUpdatedAt,omitempty"` // dataUpdatedAt
	Score         float64 `protobuf:"fixed64,4,opt,name=score,proto3" json:"score,omitempty"`                // score
}

func (x *Score) Reset() {
	*x = Score{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_analysis_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Score) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Score) ProtoMessage() {}

func (x *Score) ProtoReflect() protoreflect.Message {
	mi := &file_idl_analysis_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Score.ProtoReflect.Descriptor instead.
func (*Score) Descriptor() ([]byte, []int) {
	return file_idl_analysis_proto_rawDescGZIP(), []int{2}
}

func (x *Score) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *Score) GetDataCreatedAt() int64 {
	if x != nil {
		return x.DataCreatedAt
	}
	return 0
}

func (x *Score) GetDataUpdatedAt() int64 {
	if x != nil {
		return x.DataUpdatedAt
	}
	return 0
}

func (x *Score) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

type Summary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId        int64  `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`               //dataId
	DataCreatedAt int64  `protobuf:"varint,2,opt,name=dataCreatedAt,proto3" json:"dataCreatedAt,omitempty"` //dataCreatedAt
	DataUpdatedAt int64  `protobuf:"varint,3,opt,name=dataUpdatedAt,proto3" json:"dataUpdatedAt,omitempty"` //dataUpdatedAt
	Summary       string `protobuf:"bytes,4,opt,name=summary,proto3" json:"summary,omitempty"`              //summary
}

func (x *Summary) Reset() {
	*x = Summary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_analysis_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Summary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Summary) ProtoMessage() {}

func (x *Summary) ProtoReflect() protoreflect.Message {
	mi := &file_idl_analysis_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Summary.ProtoReflect.Descriptor instead.
func (*Summary) Descriptor() ([]byte, []int) {
	return file_idl_analysis_proto_rawDescGZIP(), []int{3}
}

func (x *Summary) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *Summary) GetDataCreatedAt() int64 {
	if x != nil {
		return x.DataCreatedAt
	}
	return 0
}

func (x *Summary) GetDataUpdatedAt() int64 {
	if x != nil {
		return x.DataUpdatedAt
	}
	return 0
}

func (x *Summary) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

type DelAnalysisReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
}

func (x *DelAnalysisReq) Reset() {
	*x = DelAnalysisReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_analysis_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelAnalysisReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAnalysisReq) ProtoMessage() {}

func (x *DelAnalysisReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_analysis_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAnalysisReq.ProtoReflect.Descriptor instead.
func (*DelAnalysisReq) Descriptor() ([]byte, []int) {
	return file_idl_analysis_proto_rawDescGZIP(), []int{4}
}

func (x *DelAnalysisReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type DelAnalysisResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *DelAnalysisResp) Reset() {
	*x = DelAnalysisResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_analysis_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelAnalysisResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAnalysisResp) ProtoMessage() {}

func (x *DelAnalysisResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_analysis_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAnalysisResp.ProtoReflect.Descriptor instead.
func (*DelAnalysisResp) Descriptor() ([]byte, []int) {
	return file_idl_analysis_proto_rawDescGZIP(), []int{5}
}

func (x *DelAnalysisResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type GetAnalysisReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
}

func (x *GetAnalysisReq) Reset() {
	*x = GetAnalysisReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_analysis_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnalysisReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnalysisReq) ProtoMessage() {}

func (x *GetAnalysisReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_analysis_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnalysisReq.ProtoReflect.Descriptor instead.
func (*GetAnalysisReq) Descriptor() ([]byte, []int) {
	return file_idl_analysis_proto_rawDescGZIP(), []int{6}
}

func (x *GetAnalysisReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type GetLanguagesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base      *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Languages *Languages `protobuf:"bytes,2,opt,name=languages,proto3" json:"languages,omitempty"` //languages
}

func (x *GetLanguagesResp) Reset() {
	*x = GetLanguagesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_analysis_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLanguagesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLanguagesResp) ProtoMessage() {}

func (x *GetLanguagesResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_analysis_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLanguagesResp.ProtoReflect.Descriptor instead.
func (*GetLanguagesResp) Descriptor() ([]byte, []int) {
	return file_idl_analysis_proto_rawDescGZIP(), []int{7}
}

func (x *GetLanguagesResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetLanguagesResp) GetLanguages() *Languages {
	if x != nil {
		return x.Languages
	}
	return nil
}

type GetNationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base   *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Nation *Nation    `protobuf:"bytes,2,opt,name=nation,proto3" json:"nation,omitempty"` // nation
}

func (x *GetNationResp) Reset() {
	*x = GetNationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_analysis_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNationResp) ProtoMessage() {}

func (x *GetNationResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_analysis_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNationResp.ProtoReflect.Descriptor instead.
func (*GetNationResp) Descriptor() ([]byte, []int) {
	return file_idl_analysis_proto_rawDescGZIP(), []int{8}
}

func (x *GetNationResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetNationResp) GetNation() *Nation {
	if x != nil {
		return x.Nation
	}
	return nil
}

type GetScoreResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base  *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Score *Score     `protobuf:"bytes,2,opt,name=score,proto3" json:"score,omitempty"` // score
}

func (x *GetScoreResp) Reset() {
	*x = GetScoreResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_analysis_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScoreResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScoreResp) ProtoMessage() {}

func (x *GetScoreResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_analysis_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScoreResp.ProtoReflect.Descriptor instead.
func (*GetScoreResp) Descriptor() ([]byte, []int) {
	return file_idl_analysis_proto_rawDescGZIP(), []int{9}
}

func (x *GetScoreResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetScoreResp) GetScore() *Score {
	if x != nil {
		return x.Score
	}
	return nil
}

type GetSummaryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base    *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Summary *Summary   `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"` //summary
}

func (x *GetSummaryResp) Reset() {
	*x = GetSummaryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_analysis_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSummaryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSummaryResp) ProtoMessage() {}

func (x *GetSummaryResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_analysis_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSummaryResp.ProtoReflect.Descriptor instead.
func (*GetSummaryResp) Descriptor() ([]byte, []int) {
	return file_idl_analysis_proto_rawDescGZIP(), []int{10}
}

func (x *GetSummaryResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetSummaryResp) GetSummary() *Summary {
	if x != nil {
		return x.Summary
	}
	return nil
}

type UpdateAnalysisReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
}

func (x *UpdateAnalysisReq) Reset() {
	*x = UpdateAnalysisReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_analysis_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAnalysisReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAnalysisReq) ProtoMessage() {}

func (x *UpdateAnalysisReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_analysis_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAnalysisReq.ProtoReflect.Descriptor instead.
func (*UpdateAnalysisReq) Descriptor() ([]byte, []int) {
	return file_idl_analysis_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateAnalysisReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type UpdateAnalysisResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *UpdateAnalysisResp) Reset() {
	*x = UpdateAnalysisResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_analysis_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAnalysisResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAnalysisResp) ProtoMessage() {}

func (x *UpdateAnalysisResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_analysis_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAnalysisResp.ProtoReflect.Descriptor instead.
func (*UpdateAnalysisResp) Descriptor() ([]byte, []int) {
	return file_idl_analysis_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateAnalysisResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

var File_idl_analysis_proto protoreflect.FileDescriptor

var file_idl_analysis_proto_rawDesc = []byte{
	0x0a, 0x12, 0x69, 0x64, 0x6c, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x1a, 0x0e,
	0x69, 0x64, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8d,
	0x01, 0x0a, 0x09, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x61, 0x74,
	0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61,
	0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x22, 0xa4,
	0x01, 0x0a, 0x06, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74,
	0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x64, 0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x07, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x64, 0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x22, 0x32, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x32, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x65,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x73, 0x22, 0x59, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69,
	0x73, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x55, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x5d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x35, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x34, 0x0a,
	0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x32, 0xc8, 0x06, 0x0a, 0x08, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x12, 0x42, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x4e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x18, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x44, 0x65,
	0x6c, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x18, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x0e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x2e, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x48, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x1b, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c,
	0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1b, 0x2e,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x2e, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x2e, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x18, 0x2e, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x42, 0x2b,
	0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x75, 0x73,
	0x68, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x35, 0x30, 0x2f, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_idl_analysis_proto_rawDescOnce sync.Once
	file_idl_analysis_proto_rawDescData = file_idl_analysis_proto_rawDesc
)

func file_idl_analysis_proto_rawDescGZIP() []byte {
	file_idl_analysis_proto_rawDescOnce.Do(func() {
		file_idl_analysis_proto_rawDescData = protoimpl.X.CompressGZIP(file_idl_analysis_proto_rawDescData)
	})
	return file_idl_analysis_proto_rawDescData
}

var file_idl_analysis_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_idl_analysis_proto_goTypes = []interface{}{
	(*Languages)(nil),          // 0: analysis.Languages
	(*Nation)(nil),             // 1: analysis.Nation
	(*Score)(nil),              // 2: analysis.Score
	(*Summary)(nil),            // 3: analysis.Summary
	(*DelAnalysisReq)(nil),     // 4: analysis.DelAnalysisReq
	(*DelAnalysisResp)(nil),    // 5: analysis.DelAnalysisResp
	(*GetAnalysisReq)(nil),     // 6: analysis.GetAnalysisReq
	(*GetLanguagesResp)(nil),   // 7: analysis.GetLanguagesResp
	(*GetNationResp)(nil),      // 8: analysis.GetNationResp
	(*GetScoreResp)(nil),       // 9: analysis.GetScoreResp
	(*GetSummaryResp)(nil),     // 10: analysis.GetSummaryResp
	(*UpdateAnalysisReq)(nil),  // 11: analysis.UpdateAnalysisReq
	(*UpdateAnalysisResp)(nil), // 12: analysis.UpdateAnalysisResp
	(*base.Base)(nil),          // 13: base.Base
}
var file_idl_analysis_proto_depIdxs = []int32{
	13, // 0: analysis.DelAnalysisResp.base:type_name -> base.Base
	13, // 1: analysis.GetLanguagesResp.base:type_name -> base.Base
	0,  // 2: analysis.GetLanguagesResp.languages:type_name -> analysis.Languages
	13, // 3: analysis.GetNationResp.base:type_name -> base.Base
	1,  // 4: analysis.GetNationResp.nation:type_name -> analysis.Nation
	13, // 5: analysis.GetScoreResp.base:type_name -> base.Base
	2,  // 6: analysis.GetScoreResp.score:type_name -> analysis.Score
	13, // 7: analysis.GetSummaryResp.base:type_name -> base.Base
	3,  // 8: analysis.GetSummaryResp.summary:type_name -> analysis.Summary
	13, // 9: analysis.UpdateAnalysisResp.base:type_name -> base.Base
	4,  // 10: analysis.analysis.DelLanguage:input_type -> analysis.DelAnalysisReq
	4,  // 11: analysis.analysis.DelNation:input_type -> analysis.DelAnalysisReq
	4,  // 12: analysis.analysis.DelScore:input_type -> analysis.DelAnalysisReq
	4,  // 13: analysis.analysis.DelSummary:input_type -> analysis.DelAnalysisReq
	11, // 14: analysis.analysis.UpdateLanguage:input_type -> analysis.UpdateAnalysisReq
	11, // 15: analysis.analysis.UpdateNation:input_type -> analysis.UpdateAnalysisReq
	11, // 16: analysis.analysis.UpdateScore:input_type -> analysis.UpdateAnalysisReq
	11, // 17: analysis.analysis.UpdateSummary:input_type -> analysis.UpdateAnalysisReq
	6,  // 18: analysis.analysis.GetLanguages:input_type -> analysis.GetAnalysisReq
	6,  // 19: analysis.analysis.GetNation:input_type -> analysis.GetAnalysisReq
	6,  // 20: analysis.analysis.GetScore:input_type -> analysis.GetAnalysisReq
	6,  // 21: analysis.analysis.GetSummary:input_type -> analysis.GetAnalysisReq
	5,  // 22: analysis.analysis.DelLanguage:output_type -> analysis.DelAnalysisResp
	5,  // 23: analysis.analysis.DelNation:output_type -> analysis.DelAnalysisResp
	5,  // 24: analysis.analysis.DelScore:output_type -> analysis.DelAnalysisResp
	5,  // 25: analysis.analysis.DelSummary:output_type -> analysis.DelAnalysisResp
	12, // 26: analysis.analysis.UpdateLanguage:output_type -> analysis.UpdateAnalysisResp
	12, // 27: analysis.analysis.UpdateNation:output_type -> analysis.UpdateAnalysisResp
	12, // 28: analysis.analysis.UpdateScore:output_type -> analysis.UpdateAnalysisResp
	12, // 29: analysis.analysis.UpdateSummary:output_type -> analysis.UpdateAnalysisResp
	7,  // 30: analysis.analysis.GetLanguages:output_type -> analysis.GetLanguagesResp
	8,  // 31: analysis.analysis.GetNation:output_type -> analysis.GetNationResp
	9,  // 32: analysis.analysis.GetScore:output_type -> analysis.GetScoreResp
	10, // 33: analysis.analysis.GetSummary:output_type -> analysis.GetSummaryResp
	22, // [22:34] is the sub-list for method output_type
	10, // [10:22] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_idl_analysis_proto_init() }
func file_idl_analysis_proto_init() {
	if File_idl_analysis_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_idl_analysis_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Languages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_analysis_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_analysis_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Score); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_analysis_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Summary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_analysis_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelAnalysisReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_analysis_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelAnalysisResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_analysis_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnalysisReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_analysis_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLanguagesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_analysis_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_analysis_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScoreResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_analysis_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSummaryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_analysis_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAnalysisReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_analysis_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAnalysisResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_idl_analysis_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_idl_analysis_proto_goTypes,
		DependencyIndexes: file_idl_analysis_proto_depIdxs,
		MessageInfos:      file_idl_analysis_proto_msgTypes,
	}.Build()
	File_idl_analysis_proto = out.File
	file_idl_analysis_proto_rawDesc = nil
	file_idl_analysis_proto_goTypes = nil
	file_idl_analysis_proto_depIdxs = nil
}
