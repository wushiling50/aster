// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.19.4
// source: idl/contribution.proto

package contribution

import (
	base "github.com/wushiling50/aster/gen/base"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ====== Contribution ======
type Contribution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId         int64  `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`                  // dataId
	DataCreatedAt  int64  `protobuf:"varint,2,opt,name=dataCreatedAt,proto3" json:"dataCreatedAt,omitempty"`    // dataCreatedAt
	DataUpdatedAt  int64  `protobuf:"varint,3,opt,name=dataUpdatedAt,proto3" json:"dataUpdatedAt,omitempty"`    // dataUpdatedAt
	DeveloperId    int64  `protobuf:"varint,4,opt,name=developerId,proto3" json:"developerId,omitempty"`        // developerId
	RepoId         int64  `protobuf:"varint,5,opt,name=repoId,proto3" json:"repoId,omitempty"`                  // repoId
	Category       string `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"`               // category
	Content        string `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`                 // content
	CreatedAt      int64  `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`            // createdAt
	UpdatedAt      int64  `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`            // updatedAt
	ContributionId int64  `protobuf:"varint,10,opt,name=contributionId,proto3" json:"contributionId,omitempty"` // contributionId
}

func (x *Contribution) Reset() {
	*x = Contribution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contribution) ProtoMessage() {}

func (x *Contribution) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contribution.ProtoReflect.Descriptor instead.
func (*Contribution) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{0}
}

func (x *Contribution) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *Contribution) GetDataCreatedAt() int64 {
	if x != nil {
		return x.DataCreatedAt
	}
	return 0
}

func (x *Contribution) GetDataUpdatedAt() int64 {
	if x != nil {
		return x.DataUpdatedAt
	}
	return 0
}

func (x *Contribution) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

func (x *Contribution) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

func (x *Contribution) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Contribution) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Contribution) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Contribution) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Contribution) GetContributionId() int64 {
	if x != nil {
		return x.ContributionId
	}
	return 0
}

type AddContributionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId    int64  `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"`       // developerId
	RepoId         int64  `protobuf:"varint,2,opt,name=repoId,proto3" json:"repoId,omitempty"`                 // repoId
	Category       string `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`              // category
	Content        string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                // content
	CreatedAt      int64  `protobuf:"varint,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`           // createdAt
	UpdatedAt      int64  `protobuf:"varint,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`           // updatedAt
	ContributionId int64  `protobuf:"varint,7,opt,name=contributionId,proto3" json:"contributionId,omitempty"` // contributionId
}

func (x *AddContributionReq) Reset() {
	*x = AddContributionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddContributionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddContributionReq) ProtoMessage() {}

func (x *AddContributionReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddContributionReq.ProtoReflect.Descriptor instead.
func (*AddContributionReq) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{1}
}

func (x *AddContributionReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

func (x *AddContributionReq) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

func (x *AddContributionReq) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *AddContributionReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AddContributionReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AddContributionReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *AddContributionReq) GetContributionId() int64 {
	if x != nil {
		return x.ContributionId
	}
	return 0
}

type AddContributionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *AddContributionResp) Reset() {
	*x = AddContributionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddContributionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddContributionResp) ProtoMessage() {}

func (x *AddContributionResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddContributionResp.ProtoReflect.Descriptor instead.
func (*AddContributionResp) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{2}
}

func (x *AddContributionResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type UpdateContributionOfUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64  `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"`
	UpdateAfter string `protobuf:"bytes,2,opt,name=updateAfter,proto3" json:"updateAfter,omitempty"`
	SearchLimit int64  `protobuf:"varint,3,opt,name=searchLimit,proto3" json:"searchLimit,omitempty"`
}

func (x *UpdateContributionOfUserReq) Reset() {
	*x = UpdateContributionOfUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateContributionOfUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContributionOfUserReq) ProtoMessage() {}

func (x *UpdateContributionOfUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContributionOfUserReq.ProtoReflect.Descriptor instead.
func (*UpdateContributionOfUserReq) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateContributionOfUserReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

func (x *UpdateContributionOfUserReq) GetUpdateAfter() string {
	if x != nil {
		return x.UpdateAfter
	}
	return ""
}

func (x *UpdateContributionOfUserReq) GetSearchLimit() int64 {
	if x != nil {
		return x.SearchLimit
	}
	return 0
}

type UpdateContributionOfUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *UpdateContributionOfUserResp) Reset() {
	*x = UpdateContributionOfUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateContributionOfUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContributionOfUserResp) ProtoMessage() {}

func (x *UpdateContributionOfUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContributionOfUserResp.ProtoReflect.Descriptor instead.
func (*UpdateContributionOfUserResp) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateContributionOfUserResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type UpdateIssuePROfUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64  `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"`
	UpdateAfter string `protobuf:"bytes,2,opt,name=updateAfter,proto3" json:"updateAfter,omitempty"`
	SearchLimit int64  `protobuf:"varint,3,opt,name=searchLimit,proto3" json:"searchLimit,omitempty"`
}

func (x *UpdateIssuePROfUserReq) Reset() {
	*x = UpdateIssuePROfUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIssuePROfUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIssuePROfUserReq) ProtoMessage() {}

func (x *UpdateIssuePROfUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIssuePROfUserReq.ProtoReflect.Descriptor instead.
func (*UpdateIssuePROfUserReq) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateIssuePROfUserReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

func (x *UpdateIssuePROfUserReq) GetUpdateAfter() string {
	if x != nil {
		return x.UpdateAfter
	}
	return ""
}

func (x *UpdateIssuePROfUserReq) GetSearchLimit() int64 {
	if x != nil {
		return x.SearchLimit
	}
	return 0
}

type UpdateIssuePROfUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *UpdateIssuePROfUserResp) Reset() {
	*x = UpdateIssuePROfUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIssuePROfUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIssuePROfUserResp) ProtoMessage() {}

func (x *UpdateIssuePROfUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIssuePROfUserResp.ProtoReflect.Descriptor instead.
func (*UpdateIssuePROfUserResp) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateIssuePROfUserResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type UpdateCommentOfUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64  `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"`
	UpdateAfter string `protobuf:"bytes,2,opt,name=updateAfter,proto3" json:"updateAfter,omitempty"`
	SearchLimit int64  `protobuf:"varint,3,opt,name=searchLimit,proto3" json:"searchLimit,omitempty"`
}

func (x *UpdateCommentOfUserReq) Reset() {
	*x = UpdateCommentOfUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommentOfUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentOfUserReq) ProtoMessage() {}

func (x *UpdateCommentOfUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentOfUserReq.ProtoReflect.Descriptor instead.
func (*UpdateCommentOfUserReq) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateCommentOfUserReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

func (x *UpdateCommentOfUserReq) GetUpdateAfter() string {
	if x != nil {
		return x.UpdateAfter
	}
	return ""
}

func (x *UpdateCommentOfUserReq) GetSearchLimit() int64 {
	if x != nil {
		return x.SearchLimit
	}
	return 0
}

type UpdateCommentOfUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *UpdateCommentOfUserResp) Reset() {
	*x = UpdateCommentOfUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommentOfUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentOfUserResp) ProtoMessage() {}

func (x *UpdateCommentOfUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentOfUserResp.ProtoReflect.Descriptor instead.
func (*UpdateCommentOfUserResp) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateCommentOfUserResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type UpdateReviewOfUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64  `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"`
	UpdateAfter string `protobuf:"bytes,2,opt,name=updateAfter,proto3" json:"updateAfter,omitempty"`
	SearchLimit int64  `protobuf:"varint,3,opt,name=searchLimit,proto3" json:"searchLimit,omitempty"`
}

func (x *UpdateReviewOfUserReq) Reset() {
	*x = UpdateReviewOfUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReviewOfUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReviewOfUserReq) ProtoMessage() {}

func (x *UpdateReviewOfUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReviewOfUserReq.ProtoReflect.Descriptor instead.
func (*UpdateReviewOfUserReq) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateReviewOfUserReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

func (x *UpdateReviewOfUserReq) GetUpdateAfter() string {
	if x != nil {
		return x.UpdateAfter
	}
	return ""
}

func (x *UpdateReviewOfUserReq) GetSearchLimit() int64 {
	if x != nil {
		return x.SearchLimit
	}
	return 0
}

type UpdateReviewOfUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *UpdateReviewOfUserResp) Reset() {
	*x = UpdateReviewOfUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReviewOfUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReviewOfUserResp) ProtoMessage() {}

func (x *UpdateReviewOfUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReviewOfUserResp.ProtoReflect.Descriptor instead.
func (*UpdateReviewOfUserResp) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateReviewOfUserResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type DelContributionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoId         int64  `protobuf:"varint,1,opt,name=repoId,proto3" json:"repoId,omitempty"`                 // repoId
	Category       string `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`              // category
	ContributionId int64  `protobuf:"varint,3,opt,name=contributionId,proto3" json:"contributionId,omitempty"` // contributionId
}

func (x *DelContributionReq) Reset() {
	*x = DelContributionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelContributionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelContributionReq) ProtoMessage() {}

func (x *DelContributionReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelContributionReq.ProtoReflect.Descriptor instead.
func (*DelContributionReq) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{11}
}

func (x *DelContributionReq) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

func (x *DelContributionReq) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *DelContributionReq) GetContributionId() int64 {
	if x != nil {
		return x.ContributionId
	}
	return 0
}

type DelContributionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *DelContributionResp) Reset() {
	*x = DelContributionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelContributionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelContributionResp) ProtoMessage() {}

func (x *DelContributionResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelContributionResp.ProtoReflect.Descriptor instead.
func (*DelContributionResp) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{12}
}

func (x *DelContributionResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type DelAllContributionInCategoryByDeveloperIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category    string `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`        // category
	DeveloperId int64  `protobuf:"varint,2,opt,name=developerId,proto3" json:"developerId,omitempty"` // developerId
}

func (x *DelAllContributionInCategoryByDeveloperIdReq) Reset() {
	*x = DelAllContributionInCategoryByDeveloperIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelAllContributionInCategoryByDeveloperIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllContributionInCategoryByDeveloperIdReq) ProtoMessage() {}

func (x *DelAllContributionInCategoryByDeveloperIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllContributionInCategoryByDeveloperIdReq.ProtoReflect.Descriptor instead.
func (*DelAllContributionInCategoryByDeveloperIdReq) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{13}
}

func (x *DelAllContributionInCategoryByDeveloperIdReq) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *DelAllContributionInCategoryByDeveloperIdReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type DelAllContributionInCategoryByDeveloperIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *DelAllContributionInCategoryByDeveloperIdResp) Reset() {
	*x = DelAllContributionInCategoryByDeveloperIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelAllContributionInCategoryByDeveloperIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllContributionInCategoryByDeveloperIdResp) ProtoMessage() {}

func (x *DelAllContributionInCategoryByDeveloperIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllContributionInCategoryByDeveloperIdResp.ProtoReflect.Descriptor instead.
func (*DelAllContributionInCategoryByDeveloperIdResp) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{14}
}

func (x *DelAllContributionInCategoryByDeveloperIdResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type GetContributionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoId         int64  `protobuf:"varint,1,opt,name=repoId,proto3" json:"repoId,omitempty"`                 // repoId
	Category       string `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`              // category
	ContributionId int64  `protobuf:"varint,3,opt,name=contributionId,proto3" json:"contributionId,omitempty"` // contributionId
}

func (x *GetContributionReq) Reset() {
	*x = GetContributionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContributionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContributionReq) ProtoMessage() {}

func (x *GetContributionReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContributionReq.ProtoReflect.Descriptor instead.
func (*GetContributionReq) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{15}
}

func (x *GetContributionReq) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

func (x *GetContributionReq) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *GetContributionReq) GetContributionId() int64 {
	if x != nil {
		return x.ContributionId
	}
	return 0
}

type GetContributionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base         *base.Base    `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Contribution *Contribution `protobuf:"bytes,2,opt,name=contribution,proto3" json:"contribution,omitempty"` // contribution
}

func (x *GetContributionResp) Reset() {
	*x = GetContributionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContributionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContributionResp) ProtoMessage() {}

func (x *GetContributionResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContributionResp.ProtoReflect.Descriptor instead.
func (*GetContributionResp) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{16}
}

func (x *GetContributionResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetContributionResp) GetContribution() *Contribution {
	if x != nil {
		return x.Contribution
	}
	return nil
}

type SearchByCategoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`        // page
	Limit    int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`      // limit
	Category string `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"` // category
}

func (x *SearchByCategoryReq) Reset() {
	*x = SearchByCategoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchByCategoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchByCategoryReq) ProtoMessage() {}

func (x *SearchByCategoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchByCategoryReq.ProtoReflect.Descriptor instead.
func (*SearchByCategoryReq) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{17}
}

func (x *SearchByCategoryReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchByCategoryReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchByCategoryReq) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type SearchByCategoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base          *base.Base      `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Contributions []*Contribution `protobuf:"bytes,2,rep,name=contributions,proto3" json:"contributions,omitempty"` // contributions
}

func (x *SearchByCategoryResp) Reset() {
	*x = SearchByCategoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchByCategoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchByCategoryResp) ProtoMessage() {}

func (x *SearchByCategoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchByCategoryResp.ProtoReflect.Descriptor instead.
func (*SearchByCategoryResp) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{18}
}

func (x *SearchByCategoryResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SearchByCategoryResp) GetContributions() []*Contribution {
	if x != nil {
		return x.Contributions
	}
	return nil
}

type SearchByDeveloperIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`               // page
	Limit       int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`             // limit
	DeveloperId int64 `protobuf:"varint,3,opt,name=developerId,proto3" json:"developerId,omitempty"` // developerId
}

func (x *SearchByDeveloperIdReq) Reset() {
	*x = SearchByDeveloperIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchByDeveloperIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchByDeveloperIdReq) ProtoMessage() {}

func (x *SearchByDeveloperIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchByDeveloperIdReq.ProtoReflect.Descriptor instead.
func (*SearchByDeveloperIdReq) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{19}
}

func (x *SearchByDeveloperIdReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchByDeveloperIdReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchByDeveloperIdReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type SearchByDeveloperIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base          *base.Base      `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Contributions []*Contribution `protobuf:"bytes,2,rep,name=contributions,proto3" json:"contributions,omitempty"` // contributions
}

func (x *SearchByDeveloperIdResp) Reset() {
	*x = SearchByDeveloperIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchByDeveloperIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchByDeveloperIdResp) ProtoMessage() {}

func (x *SearchByDeveloperIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchByDeveloperIdResp.ProtoReflect.Descriptor instead.
func (*SearchByDeveloperIdResp) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{20}
}

func (x *SearchByDeveloperIdResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SearchByDeveloperIdResp) GetContributions() []*Contribution {
	if x != nil {
		return x.Contributions
	}
	return nil
}

type SearchByRepoIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`     // page
	Limit  int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`   // limit
	RepoId int64 `protobuf:"varint,3,opt,name=repoId,proto3" json:"repoId,omitempty"` // repoId
}

func (x *SearchByRepoIdReq) Reset() {
	*x = SearchByRepoIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchByRepoIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchByRepoIdReq) ProtoMessage() {}

func (x *SearchByRepoIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchByRepoIdReq.ProtoReflect.Descriptor instead.
func (*SearchByRepoIdReq) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{21}
}

func (x *SearchByRepoIdReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchByRepoIdReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchByRepoIdReq) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type SearchByRepoIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base          *base.Base      `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Contributions []*Contribution `protobuf:"bytes,2,rep,name=contributions,proto3" json:"contributions,omitempty"` // contributions
}

func (x *SearchByRepoIdResp) Reset() {
	*x = SearchByRepoIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchByRepoIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchByRepoIdResp) ProtoMessage() {}

func (x *SearchByRepoIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchByRepoIdResp.ProtoReflect.Descriptor instead.
func (*SearchByRepoIdResp) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{22}
}

func (x *SearchByRepoIdResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SearchByRepoIdResp) GetContributions() []*Contribution {
	if x != nil {
		return x.Contributions
	}
	return nil
}

type GetIssuePROfUserUpdatedAtReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"`
}

func (x *GetIssuePROfUserUpdatedAtReq) Reset() {
	*x = GetIssuePROfUserUpdatedAtReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIssuePROfUserUpdatedAtReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIssuePROfUserUpdatedAtReq) ProtoMessage() {}

func (x *GetIssuePROfUserUpdatedAtReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIssuePROfUserUpdatedAtReq.ProtoReflect.Descriptor instead.
func (*GetIssuePROfUserUpdatedAtReq) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{23}
}

func (x *GetIssuePROfUserUpdatedAtReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type GetIssuePROfUserUpdatedAtResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base      *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	UpdatedAt int64      `protobuf:"varint,2,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *GetIssuePROfUserUpdatedAtResp) Reset() {
	*x = GetIssuePROfUserUpdatedAtResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIssuePROfUserUpdatedAtResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIssuePROfUserUpdatedAtResp) ProtoMessage() {}

func (x *GetIssuePROfUserUpdatedAtResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIssuePROfUserUpdatedAtResp.ProtoReflect.Descriptor instead.
func (*GetIssuePROfUserUpdatedAtResp) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{24}
}

func (x *GetIssuePROfUserUpdatedAtResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetIssuePROfUserUpdatedAtResp) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type GetCommentOfUserUpdatedAtReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"`
}

func (x *GetCommentOfUserUpdatedAtReq) Reset() {
	*x = GetCommentOfUserUpdatedAtReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentOfUserUpdatedAtReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentOfUserUpdatedAtReq) ProtoMessage() {}

func (x *GetCommentOfUserUpdatedAtReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentOfUserUpdatedAtReq.ProtoReflect.Descriptor instead.
func (*GetCommentOfUserUpdatedAtReq) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{25}
}

func (x *GetCommentOfUserUpdatedAtReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type GetCommentOfUserUpdatedAtResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base      *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	UpdatedAt int64      `protobuf:"varint,2,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *GetCommentOfUserUpdatedAtResp) Reset() {
	*x = GetCommentOfUserUpdatedAtResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommentOfUserUpdatedAtResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentOfUserUpdatedAtResp) ProtoMessage() {}

func (x *GetCommentOfUserUpdatedAtResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentOfUserUpdatedAtResp.ProtoReflect.Descriptor instead.
func (*GetCommentOfUserUpdatedAtResp) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{26}
}

func (x *GetCommentOfUserUpdatedAtResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetCommentOfUserUpdatedAtResp) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type GetReviewOfUserUpdatedAtReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"`
}

func (x *GetReviewOfUserUpdatedAtReq) Reset() {
	*x = GetReviewOfUserUpdatedAtReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReviewOfUserUpdatedAtReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewOfUserUpdatedAtReq) ProtoMessage() {}

func (x *GetReviewOfUserUpdatedAtReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewOfUserUpdatedAtReq.ProtoReflect.Descriptor instead.
func (*GetReviewOfUserUpdatedAtReq) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{27}
}

func (x *GetReviewOfUserUpdatedAtReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type GetReviewOfUserUpdatedAtResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base      *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	UpdatedAt int64      `protobuf:"varint,2,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *GetReviewOfUserUpdatedAtResp) Reset() {
	*x = GetReviewOfUserUpdatedAtResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_contribution_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReviewOfUserUpdatedAtResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewOfUserUpdatedAtResp) ProtoMessage() {}

func (x *GetReviewOfUserUpdatedAtResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_contribution_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewOfUserUpdatedAtResp.ProtoReflect.Descriptor instead.
func (*GetReviewOfUserUpdatedAtResp) Descriptor() ([]byte, []int) {
	return file_idl_contribution_proto_rawDescGZIP(), []int{28}
}

func (x *GetReviewOfUserUpdatedAtResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetReviewOfUserUpdatedAtResp) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

var File_idl_contribution_proto protoreflect.FileDescriptor

var file_idl_contribution_proto_rawDesc = []byte{
	0x0a, 0x16, 0x69, 0x64, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0e, 0x69, 0x64, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc6, 0x02, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x61,
	0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72,
	0x65, 0x70, 0x6f, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0xe8, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x13, 0x41, 0x64,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x22, 0x83, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x3e, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x7e, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x50, 0x52, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x39, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x50, 0x52, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x22, 0x7e, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0x39, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x7d, 0x0a,
	0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x66, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x38, 0x0a, 0x16,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x66, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x70, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65,
	0x70, 0x6f, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22,
	0x6c, 0x0a, 0x2c, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42,
	0x79, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4f, 0x0a,
	0x2d, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x44,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e,
	0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x70,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x75, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x22, 0x78, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x64,
	0x0a, 0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x7b, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79,
	0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x40, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x55, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x52, 0x65, 0x70,
	0x6f, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x76, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x42, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e,
	0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x40,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x40, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x50, 0x52, 0x4f, 0x66,
	0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x5d, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x50, 0x52,
	0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x40, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f,
	0x66, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x3f, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f,
	0x66, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x32, 0xcc, 0x0b, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x0f, 0x44, 0x65,
	0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x21, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44,
	0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0xa4, 0x01, 0x0a, 0x29, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x42, 0x79, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x3a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x44, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x3b, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x41,
	0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x21,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x59, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x21, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x62, 0x0a, 0x13,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x24, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x44, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42,
	0x79, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x53, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x52, 0x65, 0x70, 0x6f,
	0x49, 0x64, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x71, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x66,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x62, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x50, 0x52, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x24, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x50, 0x52, 0x4f, 0x66, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x50, 0x52, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x62, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x66, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x5f, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x74, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x50, 0x52, 0x4f,
	0x66, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2a,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x50, 0x52, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x50, 0x52, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x74, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x66,
	0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x2b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x71, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x29, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x66, 0x55,
	0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77,
	0x75, 0x73, 0x68, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x35, 0x30, 0x2f, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_idl_contribution_proto_rawDescOnce sync.Once
	file_idl_contribution_proto_rawDescData = file_idl_contribution_proto_rawDesc
)

func file_idl_contribution_proto_rawDescGZIP() []byte {
	file_idl_contribution_proto_rawDescOnce.Do(func() {
		file_idl_contribution_proto_rawDescData = protoimpl.X.CompressGZIP(file_idl_contribution_proto_rawDescData)
	})
	return file_idl_contribution_proto_rawDescData
}

var file_idl_contribution_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_idl_contribution_proto_goTypes = []interface{}{
	(*Contribution)(nil),                                  // 0: contribution.Contribution
	(*AddContributionReq)(nil),                            // 1: contribution.AddContributionReq
	(*AddContributionResp)(nil),                           // 2: contribution.AddContributionResp
	(*UpdateContributionOfUserReq)(nil),                   // 3: contribution.UpdateContributionOfUserReq
	(*UpdateContributionOfUserResp)(nil),                  // 4: contribution.UpdateContributionOfUserResp
	(*UpdateIssuePROfUserReq)(nil),                        // 5: contribution.UpdateIssuePROfUserReq
	(*UpdateIssuePROfUserResp)(nil),                       // 6: contribution.UpdateIssuePROfUserResp
	(*UpdateCommentOfUserReq)(nil),                        // 7: contribution.UpdateCommentOfUserReq
	(*UpdateCommentOfUserResp)(nil),                       // 8: contribution.UpdateCommentOfUserResp
	(*UpdateReviewOfUserReq)(nil),                         // 9: contribution.UpdateReviewOfUserReq
	(*UpdateReviewOfUserResp)(nil),                        // 10: contribution.UpdateReviewOfUserResp
	(*DelContributionReq)(nil),                            // 11: contribution.DelContributionReq
	(*DelContributionResp)(nil),                           // 12: contribution.DelContributionResp
	(*DelAllContributionInCategoryByDeveloperIdReq)(nil),  // 13: contribution.DelAllContributionInCategoryByDeveloperIdReq
	(*DelAllContributionInCategoryByDeveloperIdResp)(nil), // 14: contribution.DelAllContributionInCategoryByDeveloperIdResp
	(*GetContributionReq)(nil),                            // 15: contribution.GetContributionReq
	(*GetContributionResp)(nil),                           // 16: contribution.GetContributionResp
	(*SearchByCategoryReq)(nil),                           // 17: contribution.SearchByCategoryReq
	(*SearchByCategoryResp)(nil),                          // 18: contribution.SearchByCategoryResp
	(*SearchByDeveloperIdReq)(nil),                        // 19: contribution.SearchByDeveloperIdReq
	(*SearchByDeveloperIdResp)(nil),                       // 20: contribution.SearchByDeveloperIdResp
	(*SearchByRepoIdReq)(nil),                             // 21: contribution.SearchByRepoIdReq
	(*SearchByRepoIdResp)(nil),                            // 22: contribution.SearchByRepoIdResp
	(*GetIssuePROfUserUpdatedAtReq)(nil),                  // 23: contribution.GetIssuePROfUserUpdatedAtReq
	(*GetIssuePROfUserUpdatedAtResp)(nil),                 // 24: contribution.GetIssuePROfUserUpdatedAtResp
	(*GetCommentOfUserUpdatedAtReq)(nil),                  // 25: contribution.GetCommentOfUserUpdatedAtReq
	(*GetCommentOfUserUpdatedAtResp)(nil),                 // 26: contribution.GetCommentOfUserUpdatedAtResp
	(*GetReviewOfUserUpdatedAtReq)(nil),                   // 27: contribution.GetReviewOfUserUpdatedAtReq
	(*GetReviewOfUserUpdatedAtResp)(nil),                  // 28: contribution.GetReviewOfUserUpdatedAtResp
	(*base.Base)(nil),                                     // 29: base.Base
}
var file_idl_contribution_proto_depIdxs = []int32{
	29, // 0: contribution.AddContributionResp.base:type_name -> base.Base
	29, // 1: contribution.UpdateContributionOfUserResp.base:type_name -> base.Base
	29, // 2: contribution.UpdateIssuePROfUserResp.base:type_name -> base.Base
	29, // 3: contribution.UpdateCommentOfUserResp.base:type_name -> base.Base
	29, // 4: contribution.UpdateReviewOfUserResp.base:type_name -> base.Base
	29, // 5: contribution.DelContributionResp.base:type_name -> base.Base
	29, // 6: contribution.DelAllContributionInCategoryByDeveloperIdResp.base:type_name -> base.Base
	29, // 7: contribution.GetContributionResp.base:type_name -> base.Base
	0,  // 8: contribution.GetContributionResp.contribution:type_name -> contribution.Contribution
	29, // 9: contribution.SearchByCategoryResp.base:type_name -> base.Base
	0,  // 10: contribution.SearchByCategoryResp.contributions:type_name -> contribution.Contribution
	29, // 11: contribution.SearchByDeveloperIdResp.base:type_name -> base.Base
	0,  // 12: contribution.SearchByDeveloperIdResp.contributions:type_name -> contribution.Contribution
	29, // 13: contribution.SearchByRepoIdResp.base:type_name -> base.Base
	0,  // 14: contribution.SearchByRepoIdResp.contributions:type_name -> contribution.Contribution
	29, // 15: contribution.GetIssuePROfUserUpdatedAtResp.base:type_name -> base.Base
	29, // 16: contribution.GetCommentOfUserUpdatedAtResp.base:type_name -> base.Base
	29, // 17: contribution.GetReviewOfUserUpdatedAtResp.base:type_name -> base.Base
	1,  // 18: contribution.contribution.AddContribution:input_type -> contribution.AddContributionReq
	11, // 19: contribution.contribution.DelContribution:input_type -> contribution.DelContributionReq
	13, // 20: contribution.contribution.DelAllContributionInCategoryByDeveloperId:input_type -> contribution.DelAllContributionInCategoryByDeveloperIdReq
	15, // 21: contribution.contribution.GetContribution:input_type -> contribution.GetContributionReq
	17, // 22: contribution.contribution.SearchByCategory:input_type -> contribution.SearchByCategoryReq
	19, // 23: contribution.contribution.SearchByDeveloperId:input_type -> contribution.SearchByDeveloperIdReq
	21, // 24: contribution.contribution.SearchByRepoId:input_type -> contribution.SearchByRepoIdReq
	3,  // 25: contribution.contribution.UpdateContributionOfUser:input_type -> contribution.UpdateContributionOfUserReq
	5,  // 26: contribution.contribution.UpdateIssuePROfUser:input_type -> contribution.UpdateIssuePROfUserReq
	7,  // 27: contribution.contribution.UpdateCommentOfUser:input_type -> contribution.UpdateCommentOfUserReq
	9,  // 28: contribution.contribution.UpdateReviewOfUser:input_type -> contribution.UpdateReviewOfUserReq
	23, // 29: contribution.contribution.GetIssuePROfUserUpdatedAt:input_type -> contribution.GetIssuePROfUserUpdatedAtReq
	25, // 30: contribution.contribution.GetCommentOfUserUpdatedAt:input_type -> contribution.GetCommentOfUserUpdatedAtReq
	27, // 31: contribution.contribution.GetReviewOfUserUpdatedAt:input_type -> contribution.GetReviewOfUserUpdatedAtReq
	2,  // 32: contribution.contribution.AddContribution:output_type -> contribution.AddContributionResp
	12, // 33: contribution.contribution.DelContribution:output_type -> contribution.DelContributionResp
	14, // 34: contribution.contribution.DelAllContributionInCategoryByDeveloperId:output_type -> contribution.DelAllContributionInCategoryByDeveloperIdResp
	16, // 35: contribution.contribution.GetContribution:output_type -> contribution.GetContributionResp
	18, // 36: contribution.contribution.SearchByCategory:output_type -> contribution.SearchByCategoryResp
	20, // 37: contribution.contribution.SearchByDeveloperId:output_type -> contribution.SearchByDeveloperIdResp
	22, // 38: contribution.contribution.SearchByRepoId:output_type -> contribution.SearchByRepoIdResp
	4,  // 39: contribution.contribution.UpdateContributionOfUser:output_type -> contribution.UpdateContributionOfUserResp
	6,  // 40: contribution.contribution.UpdateIssuePROfUser:output_type -> contribution.UpdateIssuePROfUserResp
	8,  // 41: contribution.contribution.UpdateCommentOfUser:output_type -> contribution.UpdateCommentOfUserResp
	10, // 42: contribution.contribution.UpdateReviewOfUser:output_type -> contribution.UpdateReviewOfUserResp
	24, // 43: contribution.contribution.GetIssuePROfUserUpdatedAt:output_type -> contribution.GetIssuePROfUserUpdatedAtResp
	26, // 44: contribution.contribution.GetCommentOfUserUpdatedAt:output_type -> contribution.GetCommentOfUserUpdatedAtResp
	28, // 45: contribution.contribution.GetReviewOfUserUpdatedAt:output_type -> contribution.GetReviewOfUserUpdatedAtResp
	32, // [32:46] is the sub-list for method output_type
	18, // [18:32] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_idl_contribution_proto_init() }
func file_idl_contribution_proto_init() {
	if File_idl_contribution_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_idl_contribution_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contribution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddContributionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddContributionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateContributionOfUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateContributionOfUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIssuePROfUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIssuePROfUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommentOfUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommentOfUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReviewOfUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReviewOfUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelContributionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelContributionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelAllContributionInCategoryByDeveloperIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelAllContributionInCategoryByDeveloperIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContributionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContributionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchByCategoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchByCategoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchByDeveloperIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchByDeveloperIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchByRepoIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchByRepoIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIssuePROfUserUpdatedAtReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIssuePROfUserUpdatedAtResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentOfUserUpdatedAtReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommentOfUserUpdatedAtResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReviewOfUserUpdatedAtReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_contribution_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReviewOfUserUpdatedAtResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_idl_contribution_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_idl_contribution_proto_goTypes,
		DependencyIndexes: file_idl_contribution_proto_depIdxs,
		MessageInfos:      file_idl_contribution_proto_msgTypes,
	}.Build()
	File_idl_contribution_proto = out.File
	file_idl_contribution_proto_rawDesc = nil
	file_idl_contribution_proto_goTypes = nil
	file_idl_contribution_proto_depIdxs = nil
}
