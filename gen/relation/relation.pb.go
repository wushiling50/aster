// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.19.4
// source: idl/relation.proto

package relation

import (
	base "github.com/wushiling50/aster/gen/base"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ====== CreateRepo ======
type CreateRepo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId      int64 `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`           // dataId
	DeveloperId int64 `protobuf:"varint,2,opt,name=developerId,proto3" json:"developerId,omitempty"` // developerId
	RepoId      int64 `protobuf:"varint,3,opt,name=repoId,proto3" json:"repoId,omitempty"`           // repoId
}

func (x *CreateRepo) Reset() {
	*x = CreateRepo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRepo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRepo) ProtoMessage() {}

func (x *CreateRepo) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRepo.ProtoReflect.Descriptor instead.
func (*CreateRepo) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRepo) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *CreateRepo) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

func (x *CreateRepo) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type AddCreateRepoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` // developerId
	RepoId      int64 `protobuf:"varint,2,opt,name=repoId,proto3" json:"repoId,omitempty"`           // repoId
}

func (x *AddCreateRepoReq) Reset() {
	*x = AddCreateRepoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCreateRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCreateRepoReq) ProtoMessage() {}

func (x *AddCreateRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCreateRepoReq.ProtoReflect.Descriptor instead.
func (*AddCreateRepoReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{1}
}

func (x *AddCreateRepoReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

func (x *AddCreateRepoReq) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type AddCreateRepoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *AddCreateRepoResp) Reset() {
	*x = AddCreateRepoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCreateRepoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCreateRepoResp) ProtoMessage() {}

func (x *AddCreateRepoResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCreateRepoResp.ProtoReflect.Descriptor instead.
func (*AddCreateRepoResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{2}
}

func (x *AddCreateRepoResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type DelCreateRepoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoId int64 `protobuf:"varint,1,opt,name=repoId,proto3" json:"repoId,omitempty"` // repoId
}

func (x *DelCreateRepoReq) Reset() {
	*x = DelCreateRepoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCreateRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCreateRepoReq) ProtoMessage() {}

func (x *DelCreateRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCreateRepoReq.ProtoReflect.Descriptor instead.
func (*DelCreateRepoReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{3}
}

func (x *DelCreateRepoReq) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type DelCreateRepoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *DelCreateRepoResp) Reset() {
	*x = DelCreateRepoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelCreateRepoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCreateRepoResp) ProtoMessage() {}

func (x *DelCreateRepoResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCreateRepoResp.ProtoReflect.Descriptor instead.
func (*DelCreateRepoResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{4}
}

func (x *DelCreateRepoResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type DelAllCreatedRepoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` // developerId
}

func (x *DelAllCreatedRepoReq) Reset() {
	*x = DelAllCreatedRepoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelAllCreatedRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllCreatedRepoReq) ProtoMessage() {}

func (x *DelAllCreatedRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllCreatedRepoReq.ProtoReflect.Descriptor instead.
func (*DelAllCreatedRepoReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{5}
}

func (x *DelAllCreatedRepoReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type DelAllCreatedRepoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *DelAllCreatedRepoResp) Reset() {
	*x = DelAllCreatedRepoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelAllCreatedRepoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllCreatedRepoResp) ProtoMessage() {}

func (x *DelAllCreatedRepoResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllCreatedRepoResp.ProtoReflect.Descriptor instead.
func (*DelAllCreatedRepoResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{6}
}

func (x *DelAllCreatedRepoResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type GetCreatorIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoId int64 `protobuf:"varint,1,opt,name=repoId,proto3" json:"repoId,omitempty"` // repoId
}

func (x *GetCreatorIdReq) Reset() {
	*x = GetCreatorIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCreatorIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreatorIdReq) ProtoMessage() {}

func (x *GetCreatorIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreatorIdReq.ProtoReflect.Descriptor instead.
func (*GetCreatorIdReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{7}
}

func (x *GetCreatorIdReq) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type GetCreatorIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base        *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DeveloperId int64      `protobuf:"varint,2,opt,name=developerId,proto3" json:"developerId,omitempty"` // developerId
}

func (x *GetCreatorIdResp) Reset() {
	*x = GetCreatorIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCreatorIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreatorIdResp) ProtoMessage() {}

func (x *GetCreatorIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreatorIdResp.ProtoReflect.Descriptor instead.
func (*GetCreatorIdResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{8}
}

func (x *GetCreatorIdResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetCreatorIdResp) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type SearchCreatedRepoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`               // page
	Limit       int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`             // limit
	DeveloperId int64 `protobuf:"varint,3,opt,name=developerId,proto3" json:"developerId,omitempty"` // developerId
}

func (x *SearchCreatedRepoReq) Reset() {
	*x = SearchCreatedRepoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCreatedRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCreatedRepoReq) ProtoMessage() {}

func (x *SearchCreatedRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCreatedRepoReq.ProtoReflect.Descriptor instead.
func (*SearchCreatedRepoReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{9}
}

func (x *SearchCreatedRepoReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchCreatedRepoReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchCreatedRepoReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type SearchCreatedRepoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base    *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	RepoIds []int64    `protobuf:"varint,2,rep,packed,name=repoIds,proto3" json:"repoIds,omitempty"` // repoId
}

func (x *SearchCreatedRepoResp) Reset() {
	*x = SearchCreatedRepoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCreatedRepoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCreatedRepoResp) ProtoMessage() {}

func (x *SearchCreatedRepoResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCreatedRepoResp.ProtoReflect.Descriptor instead.
func (*SearchCreatedRepoResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{10}
}

func (x *SearchCreatedRepoResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SearchCreatedRepoResp) GetRepoIds() []int64 {
	if x != nil {
		return x.RepoIds
	}
	return nil
}

type UpdateCreateRepoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"`
}

func (x *UpdateCreateRepoReq) Reset() {
	*x = UpdateCreateRepoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCreateRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCreateRepoReq) ProtoMessage() {}

func (x *UpdateCreateRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCreateRepoReq.ProtoReflect.Descriptor instead.
func (*UpdateCreateRepoReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateCreateRepoReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type UpdateCreateRepoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *UpdateCreateRepoResp) Reset() {
	*x = UpdateCreateRepoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCreateRepoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCreateRepoResp) ProtoMessage() {}

func (x *UpdateCreateRepoResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCreateRepoResp.ProtoReflect.Descriptor instead.
func (*UpdateCreateRepoResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateCreateRepoResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type GetCreatedRepoUpdatedAtReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"`
}

func (x *GetCreatedRepoUpdatedAtReq) Reset() {
	*x = GetCreatedRepoUpdatedAtReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCreatedRepoUpdatedAtReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreatedRepoUpdatedAtReq) ProtoMessage() {}

func (x *GetCreatedRepoUpdatedAtReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreatedRepoUpdatedAtReq.ProtoReflect.Descriptor instead.
func (*GetCreatedRepoUpdatedAtReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{13}
}

func (x *GetCreatedRepoUpdatedAtReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type GetCreatedRepoUpdatedAtResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base      *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	UpdatedAt int64      `protobuf:"varint,2,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *GetCreatedRepoUpdatedAtResp) Reset() {
	*x = GetCreatedRepoUpdatedAtResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCreatedRepoUpdatedAtResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreatedRepoUpdatedAtResp) ProtoMessage() {}

func (x *GetCreatedRepoUpdatedAtResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreatedRepoUpdatedAtResp.ProtoReflect.Descriptor instead.
func (*GetCreatedRepoUpdatedAtResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{14}
}

func (x *GetCreatedRepoUpdatedAtResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetCreatedRepoUpdatedAtResp) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// ====== Follow ======
type Follow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId      int64 `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`           // dataId
	FollowerId  int64 `protobuf:"varint,2,opt,name=followerId,proto3" json:"followerId,omitempty"`   // followerId
	FollowingId int64 `protobuf:"varint,3,opt,name=followingId,proto3" json:"followingId,omitempty"` // followingId
}

func (x *Follow) Reset() {
	*x = Follow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Follow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Follow) ProtoMessage() {}

func (x *Follow) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Follow.ProtoReflect.Descriptor instead.
func (*Follow) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{15}
}

func (x *Follow) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *Follow) GetFollowerId() int64 {
	if x != nil {
		return x.FollowerId
	}
	return 0
}

func (x *Follow) GetFollowingId() int64 {
	if x != nil {
		return x.FollowingId
	}
	return 0
}

type AddFollowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FollowerId  int64 `protobuf:"varint,1,opt,name=followerId,proto3" json:"followerId,omitempty"`   // followerId
	FollowingId int64 `protobuf:"varint,2,opt,name=followingId,proto3" json:"followingId,omitempty"` // followingId
}

func (x *AddFollowReq) Reset() {
	*x = AddFollowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFollowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFollowReq) ProtoMessage() {}

func (x *AddFollowReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFollowReq.ProtoReflect.Descriptor instead.
func (*AddFollowReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{16}
}

func (x *AddFollowReq) GetFollowerId() int64 {
	if x != nil {
		return x.FollowerId
	}
	return 0
}

func (x *AddFollowReq) GetFollowingId() int64 {
	if x != nil {
		return x.FollowingId
	}
	return 0
}

type AddFollowResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *AddFollowResp) Reset() {
	*x = AddFollowResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFollowResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFollowResp) ProtoMessage() {}

func (x *AddFollowResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFollowResp.ProtoReflect.Descriptor instead.
func (*AddFollowResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{17}
}

func (x *AddFollowResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type DelFollowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FollowerId  int64 `protobuf:"varint,1,opt,name=followerId,proto3" json:"followerId,omitempty"`   // followerId
	FollowingId int64 `protobuf:"varint,2,opt,name=followingId,proto3" json:"followingId,omitempty"` // followingId
}

func (x *DelFollowReq) Reset() {
	*x = DelFollowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelFollowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelFollowReq) ProtoMessage() {}

func (x *DelFollowReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelFollowReq.ProtoReflect.Descriptor instead.
func (*DelFollowReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{18}
}

func (x *DelFollowReq) GetFollowerId() int64 {
	if x != nil {
		return x.FollowerId
	}
	return 0
}

func (x *DelFollowReq) GetFollowingId() int64 {
	if x != nil {
		return x.FollowingId
	}
	return 0
}

type DelFollowResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *DelFollowResp) Reset() {
	*x = DelFollowResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelFollowResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelFollowResp) ProtoMessage() {}

func (x *DelFollowResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelFollowResp.ProtoReflect.Descriptor instead.
func (*DelFollowResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{19}
}

func (x *DelFollowResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type DelAllFollowerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` // developerId
}

func (x *DelAllFollowerReq) Reset() {
	*x = DelAllFollowerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelAllFollowerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllFollowerReq) ProtoMessage() {}

func (x *DelAllFollowerReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllFollowerReq.ProtoReflect.Descriptor instead.
func (*DelAllFollowerReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{20}
}

func (x *DelAllFollowerReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type DelAllFollowerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *DelAllFollowerResp) Reset() {
	*x = DelAllFollowerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelAllFollowerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllFollowerResp) ProtoMessage() {}

func (x *DelAllFollowerResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllFollowerResp.ProtoReflect.Descriptor instead.
func (*DelAllFollowerResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{21}
}

func (x *DelAllFollowerResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type DelAllFollowingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` // developerId
}

func (x *DelAllFollowingReq) Reset() {
	*x = DelAllFollowingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelAllFollowingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllFollowingReq) ProtoMessage() {}

func (x *DelAllFollowingReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllFollowingReq.ProtoReflect.Descriptor instead.
func (*DelAllFollowingReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{22}
}

func (x *DelAllFollowingReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type DelAllFollowingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *DelAllFollowingResp) Reset() {
	*x = DelAllFollowingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelAllFollowingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllFollowingResp) ProtoMessage() {}

func (x *DelAllFollowingResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllFollowingResp.ProtoReflect.Descriptor instead.
func (*DelAllFollowingResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{23}
}

func (x *DelAllFollowingResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type CheckIfFollowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FollowerId  int64 `protobuf:"varint,1,opt,name=followerId,proto3" json:"followerId,omitempty"`   // followerId
	FollowingId int64 `protobuf:"varint,2,opt,name=followingId,proto3" json:"followingId,omitempty"` // followingId
}

func (x *CheckIfFollowReq) Reset() {
	*x = CheckIfFollowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckIfFollowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIfFollowReq) ProtoMessage() {}

func (x *CheckIfFollowReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIfFollowReq.ProtoReflect.Descriptor instead.
func (*CheckIfFollowReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{24}
}

func (x *CheckIfFollowReq) GetFollowerId() int64 {
	if x != nil {
		return x.FollowerId
	}
	return 0
}

func (x *CheckIfFollowReq) GetFollowingId() int64 {
	if x != nil {
		return x.FollowingId
	}
	return 0
}

type CheckFollowResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base     *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	IsFollow bool       `protobuf:"varint,2,opt,name=isFollow,proto3" json:"isFollow,omitempty"` // isFollow
}

func (x *CheckFollowResp) Reset() {
	*x = CheckFollowResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckFollowResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckFollowResp) ProtoMessage() {}

func (x *CheckFollowResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckFollowResp.ProtoReflect.Descriptor instead.
func (*CheckFollowResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{25}
}

func (x *CheckFollowResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CheckFollowResp) GetIsFollow() bool {
	if x != nil {
		return x.IsFollow
	}
	return false
}

type SearchFollowingByDeveloperIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`               // page
	Limit       int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`             // limit
	DeveloperId int64 `protobuf:"varint,3,opt,name=developerId,proto3" json:"developerId,omitempty"` // followerId
}

func (x *SearchFollowingByDeveloperIdReq) Reset() {
	*x = SearchFollowingByDeveloperIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFollowingByDeveloperIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFollowingByDeveloperIdReq) ProtoMessage() {}

func (x *SearchFollowingByDeveloperIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFollowingByDeveloperIdReq.ProtoReflect.Descriptor instead.
func (*SearchFollowingByDeveloperIdReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{26}
}

func (x *SearchFollowingByDeveloperIdReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchFollowingByDeveloperIdReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchFollowingByDeveloperIdReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type SearchFollowingByDeveloperIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base         *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	FollowingIds []int64    `protobuf:"varint,2,rep,packed,name=followingIds,proto3" json:"followingIds,omitempty"` // followingId
}

func (x *SearchFollowingByDeveloperIdResp) Reset() {
	*x = SearchFollowingByDeveloperIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFollowingByDeveloperIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFollowingByDeveloperIdResp) ProtoMessage() {}

func (x *SearchFollowingByDeveloperIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFollowingByDeveloperIdResp.ProtoReflect.Descriptor instead.
func (*SearchFollowingByDeveloperIdResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{27}
}

func (x *SearchFollowingByDeveloperIdResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SearchFollowingByDeveloperIdResp) GetFollowingIds() []int64 {
	if x != nil {
		return x.FollowingIds
	}
	return nil
}

type SearchFollowerByDeveloperIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`               // page
	Limit       int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`             // limit
	DeveloperId int64 `protobuf:"varint,3,opt,name=developerId,proto3" json:"developerId,omitempty"` // followingId
}

func (x *SearchFollowerByDeveloperIdReq) Reset() {
	*x = SearchFollowerByDeveloperIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFollowerByDeveloperIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFollowerByDeveloperIdReq) ProtoMessage() {}

func (x *SearchFollowerByDeveloperIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFollowerByDeveloperIdReq.ProtoReflect.Descriptor instead.
func (*SearchFollowerByDeveloperIdReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{28}
}

func (x *SearchFollowerByDeveloperIdReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchFollowerByDeveloperIdReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchFollowerByDeveloperIdReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type SearchFollowerByDeveloperIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base        *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	FollowerIds []int64    `protobuf:"varint,2,rep,packed,name=followerIds,proto3" json:"followerIds,omitempty"` // followerId
}

func (x *SearchFollowerByDeveloperIdResp) Reset() {
	*x = SearchFollowerByDeveloperIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFollowerByDeveloperIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFollowerByDeveloperIdResp) ProtoMessage() {}

func (x *SearchFollowerByDeveloperIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFollowerByDeveloperIdResp.ProtoReflect.Descriptor instead.
func (*SearchFollowerByDeveloperIdResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{29}
}

func (x *SearchFollowerByDeveloperIdResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SearchFollowerByDeveloperIdResp) GetFollowerIds() []int64 {
	if x != nil {
		return x.FollowerIds
	}
	return nil
}

type UpdateFollowingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"`
}

func (x *UpdateFollowingReq) Reset() {
	*x = UpdateFollowingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFollowingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFollowingReq) ProtoMessage() {}

func (x *UpdateFollowingReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFollowingReq.ProtoReflect.Descriptor instead.
func (*UpdateFollowingReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateFollowingReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type UpdateFollowingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *UpdateFollowingResp) Reset() {
	*x = UpdateFollowingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFollowingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFollowingResp) ProtoMessage() {}

func (x *UpdateFollowingResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFollowingResp.ProtoReflect.Descriptor instead.
func (*UpdateFollowingResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateFollowingResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type UpdateFollowerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"`
}

func (x *UpdateFollowerReq) Reset() {
	*x = UpdateFollowerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFollowerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFollowerReq) ProtoMessage() {}

func (x *UpdateFollowerReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFollowerReq.ProtoReflect.Descriptor instead.
func (*UpdateFollowerReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateFollowerReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type UpdateFollowerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *UpdateFollowerResp) Reset() {
	*x = UpdateFollowerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFollowerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFollowerResp) ProtoMessage() {}

func (x *UpdateFollowerResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFollowerResp.ProtoReflect.Descriptor instead.
func (*UpdateFollowerResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateFollowerResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type GetFollowingUpdatedAtReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"`
}

func (x *GetFollowingUpdatedAtReq) Reset() {
	*x = GetFollowingUpdatedAtReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFollowingUpdatedAtReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFollowingUpdatedAtReq) ProtoMessage() {}

func (x *GetFollowingUpdatedAtReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFollowingUpdatedAtReq.ProtoReflect.Descriptor instead.
func (*GetFollowingUpdatedAtReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{34}
}

func (x *GetFollowingUpdatedAtReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type GetFollowingUpdatedAtResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base      *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	UpdatedAt int64      `protobuf:"varint,2,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *GetFollowingUpdatedAtResp) Reset() {
	*x = GetFollowingUpdatedAtResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFollowingUpdatedAtResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFollowingUpdatedAtResp) ProtoMessage() {}

func (x *GetFollowingUpdatedAtResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFollowingUpdatedAtResp.ProtoReflect.Descriptor instead.
func (*GetFollowingUpdatedAtResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{35}
}

func (x *GetFollowingUpdatedAtResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetFollowingUpdatedAtResp) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type GetFollowerUpdatedAtReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"`
}

func (x *GetFollowerUpdatedAtReq) Reset() {
	*x = GetFollowerUpdatedAtReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFollowerUpdatedAtReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFollowerUpdatedAtReq) ProtoMessage() {}

func (x *GetFollowerUpdatedAtReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFollowerUpdatedAtReq.ProtoReflect.Descriptor instead.
func (*GetFollowerUpdatedAtReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{36}
}

func (x *GetFollowerUpdatedAtReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type GetFollowerUpdatedAtResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base      *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	UpdatedAt int64      `protobuf:"varint,2,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *GetFollowerUpdatedAtResp) Reset() {
	*x = GetFollowerUpdatedAtResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFollowerUpdatedAtResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFollowerUpdatedAtResp) ProtoMessage() {}

func (x *GetFollowerUpdatedAtResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFollowerUpdatedAtResp.ProtoReflect.Descriptor instead.
func (*GetFollowerUpdatedAtResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{37}
}

func (x *GetFollowerUpdatedAtResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetFollowerUpdatedAtResp) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// ====== Fork ======
type Fork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId         int64 `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`                 // dataId
	OriginalRepoId int64 `protobuf:"varint,2,opt,name=originalRepoId,proto3" json:"originalRepoId,omitempty"` // originalRepoId
	ForkRepoId     int64 `protobuf:"varint,3,opt,name=forkRepoId,proto3" json:"forkRepoId,omitempty"`         // forkRepoId
}

func (x *Fork) Reset() {
	*x = Fork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fork) ProtoMessage() {}

func (x *Fork) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fork.ProtoReflect.Descriptor instead.
func (*Fork) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{38}
}

func (x *Fork) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *Fork) GetOriginalRepoId() int64 {
	if x != nil {
		return x.OriginalRepoId
	}
	return 0
}

func (x *Fork) GetForkRepoId() int64 {
	if x != nil {
		return x.ForkRepoId
	}
	return 0
}

type AddForkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalRepoId int64 `protobuf:"varint,1,opt,name=originalRepoId,proto3" json:"originalRepoId,omitempty"` // originalRepoId
	ForkRepoId     int64 `protobuf:"varint,2,opt,name=forkRepoId,proto3" json:"forkRepoId,omitempty"`         // forkRepoId
}

func (x *AddForkReq) Reset() {
	*x = AddForkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddForkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddForkReq) ProtoMessage() {}

func (x *AddForkReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddForkReq.ProtoReflect.Descriptor instead.
func (*AddForkReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{39}
}

func (x *AddForkReq) GetOriginalRepoId() int64 {
	if x != nil {
		return x.OriginalRepoId
	}
	return 0
}

func (x *AddForkReq) GetForkRepoId() int64 {
	if x != nil {
		return x.ForkRepoId
	}
	return 0
}

type AddForkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *AddForkResp) Reset() {
	*x = AddForkResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddForkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddForkResp) ProtoMessage() {}

func (x *AddForkResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddForkResp.ProtoReflect.Descriptor instead.
func (*AddForkResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{40}
}

func (x *AddForkResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type DelForkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForkRepoId int64 `protobuf:"varint,1,opt,name=forkRepoId,proto3" json:"forkRepoId,omitempty"` // forkRepoId
}

func (x *DelForkReq) Reset() {
	*x = DelForkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelForkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelForkReq) ProtoMessage() {}

func (x *DelForkReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelForkReq.ProtoReflect.Descriptor instead.
func (*DelForkReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{41}
}

func (x *DelForkReq) GetForkRepoId() int64 {
	if x != nil {
		return x.ForkRepoId
	}
	return 0
}

type DelForkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *DelForkResp) Reset() {
	*x = DelForkResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelForkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelForkResp) ProtoMessage() {}

func (x *DelForkResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelForkResp.ProtoReflect.Descriptor instead.
func (*DelForkResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{42}
}

func (x *DelForkResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type DelAllForkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalRepoId int64 `protobuf:"varint,1,opt,name=originalRepoId,proto3" json:"originalRepoId,omitempty"` // originalRepoId
}

func (x *DelAllForkReq) Reset() {
	*x = DelAllForkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelAllForkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllForkReq) ProtoMessage() {}

func (x *DelAllForkReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllForkReq.ProtoReflect.Descriptor instead.
func (*DelAllForkReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{43}
}

func (x *DelAllForkReq) GetOriginalRepoId() int64 {
	if x != nil {
		return x.OriginalRepoId
	}
	return 0
}

type DelAllForkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *DelAllForkResp) Reset() {
	*x = DelAllForkResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelAllForkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllForkResp) ProtoMessage() {}

func (x *DelAllForkResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllForkResp.ProtoReflect.Descriptor instead.
func (*DelAllForkResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{44}
}

func (x *DelAllForkResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type GetOriginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForkRepoId int64 `protobuf:"varint,1,opt,name=forkRepoId,proto3" json:"forkRepoId,omitempty"` // forkRepoId
}

func (x *GetOriginReq) Reset() {
	*x = GetOriginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOriginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOriginReq) ProtoMessage() {}

func (x *GetOriginReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOriginReq.ProtoReflect.Descriptor instead.
func (*GetOriginReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{45}
}

func (x *GetOriginReq) GetForkRepoId() int64 {
	if x != nil {
		return x.ForkRepoId
	}
	return 0
}

type GetOriginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base           *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	OriginalRepoId int64      `protobuf:"varint,2,opt,name=originalRepoId,proto3" json:"originalRepoId,omitempty"` // originalRepoId
}

func (x *GetOriginResp) Reset() {
	*x = GetOriginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOriginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOriginResp) ProtoMessage() {}

func (x *GetOriginResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOriginResp.ProtoReflect.Descriptor instead.
func (*GetOriginResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{46}
}

func (x *GetOriginResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetOriginResp) GetOriginalRepoId() int64 {
	if x != nil {
		return x.OriginalRepoId
	}
	return 0
}

type SearchForkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page           int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                     // page
	Limit          int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                   // limit
	OriginalRepoId int64 `protobuf:"varint,3,opt,name=originalRepoId,proto3" json:"originalRepoId,omitempty"` // originalRepoId
}

func (x *SearchForkReq) Reset() {
	*x = SearchForkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchForkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchForkReq) ProtoMessage() {}

func (x *SearchForkReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchForkReq.ProtoReflect.Descriptor instead.
func (*SearchForkReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{47}
}

func (x *SearchForkReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchForkReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchForkReq) GetOriginalRepoId() int64 {
	if x != nil {
		return x.OriginalRepoId
	}
	return 0
}

type SearchForkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base        *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	ForkRepoIds []int64    `protobuf:"varint,2,rep,packed,name=forkRepoIds,proto3" json:"forkRepoIds,omitempty"` // forkRepoId
}

func (x *SearchForkResp) Reset() {
	*x = SearchForkResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchForkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchForkResp) ProtoMessage() {}

func (x *SearchForkResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchForkResp.ProtoReflect.Descriptor instead.
func (*SearchForkResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{48}
}

func (x *SearchForkResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SearchForkResp) GetForkRepoIds() []int64 {
	if x != nil {
		return x.ForkRepoIds
	}
	return nil
}

type UpdateForkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalRepoId int64 `protobuf:"varint,1,opt,name=originalRepoId,proto3" json:"originalRepoId,omitempty"`
}

func (x *UpdateForkReq) Reset() {
	*x = UpdateForkReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateForkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateForkReq) ProtoMessage() {}

func (x *UpdateForkReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateForkReq.ProtoReflect.Descriptor instead.
func (*UpdateForkReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{49}
}

func (x *UpdateForkReq) GetOriginalRepoId() int64 {
	if x != nil {
		return x.OriginalRepoId
	}
	return 0
}

type UpdateForkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *UpdateForkResp) Reset() {
	*x = UpdateForkResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateForkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateForkResp) ProtoMessage() {}

func (x *UpdateForkResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateForkResp.ProtoReflect.Descriptor instead.
func (*UpdateForkResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{50}
}

func (x *UpdateForkResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type GetForkUpdatedAtReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalRepoId int64 `protobuf:"varint,1,opt,name=originalRepoId,proto3" json:"originalRepoId,omitempty"`
}

func (x *GetForkUpdatedAtReq) Reset() {
	*x = GetForkUpdatedAtReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetForkUpdatedAtReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForkUpdatedAtReq) ProtoMessage() {}

func (x *GetForkUpdatedAtReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetForkUpdatedAtReq.ProtoReflect.Descriptor instead.
func (*GetForkUpdatedAtReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{51}
}

func (x *GetForkUpdatedAtReq) GetOriginalRepoId() int64 {
	if x != nil {
		return x.OriginalRepoId
	}
	return 0
}

type GetForkUpdatedAtResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base      *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	UpdatedAt int64      `protobuf:"varint,2,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *GetForkUpdatedAtResp) Reset() {
	*x = GetForkUpdatedAtResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetForkUpdatedAtResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForkUpdatedAtResp) ProtoMessage() {}

func (x *GetForkUpdatedAtResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetForkUpdatedAtResp.ProtoReflect.Descriptor instead.
func (*GetForkUpdatedAtResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{52}
}

func (x *GetForkUpdatedAtResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetForkUpdatedAtResp) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// ====== Star ======
type Star struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId      int64 `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`           // dataId
	DeveloperId int64 `protobuf:"varint,2,opt,name=developerId,proto3" json:"developerId,omitempty"` // developerId
	RepoId      int64 `protobuf:"varint,3,opt,name=repoId,proto3" json:"repoId,omitempty"`           // repoId
}

func (x *Star) Reset() {
	*x = Star{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Star) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Star) ProtoMessage() {}

func (x *Star) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Star.ProtoReflect.Descriptor instead.
func (*Star) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{53}
}

func (x *Star) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *Star) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

func (x *Star) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type AddStarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` // developerId
	RepoId      int64 `protobuf:"varint,2,opt,name=repoId,proto3" json:"repoId,omitempty"`           // repoId
}

func (x *AddStarReq) Reset() {
	*x = AddStarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStarReq) ProtoMessage() {}

func (x *AddStarReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStarReq.ProtoReflect.Descriptor instead.
func (*AddStarReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{54}
}

func (x *AddStarReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

func (x *AddStarReq) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type AddStarResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *AddStarResp) Reset() {
	*x = AddStarResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStarResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStarResp) ProtoMessage() {}

func (x *AddStarResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStarResp.ProtoReflect.Descriptor instead.
func (*AddStarResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{55}
}

func (x *AddStarResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type DelStarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` // developerId
	RepoId      int64 `protobuf:"varint,2,opt,name=repoId,proto3" json:"repoId,omitempty"`           // repoId
}

func (x *DelStarReq) Reset() {
	*x = DelStarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelStarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelStarReq) ProtoMessage() {}

func (x *DelStarReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelStarReq.ProtoReflect.Descriptor instead.
func (*DelStarReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{56}
}

func (x *DelStarReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

func (x *DelStarReq) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type DelStarResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *DelStarResp) Reset() {
	*x = DelStarResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelStarResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelStarResp) ProtoMessage() {}

func (x *DelStarResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelStarResp.ProtoReflect.Descriptor instead.
func (*DelStarResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{57}
}

func (x *DelStarResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type DelAllStarredRepoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` // developerId
}

func (x *DelAllStarredRepoReq) Reset() {
	*x = DelAllStarredRepoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelAllStarredRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllStarredRepoReq) ProtoMessage() {}

func (x *DelAllStarredRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllStarredRepoReq.ProtoReflect.Descriptor instead.
func (*DelAllStarredRepoReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{58}
}

func (x *DelAllStarredRepoReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type DelAllStarredRepoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *DelAllStarredRepoResp) Reset() {
	*x = DelAllStarredRepoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelAllStarredRepoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllStarredRepoResp) ProtoMessage() {}

func (x *DelAllStarredRepoResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllStarredRepoResp.ProtoReflect.Descriptor instead.
func (*DelAllStarredRepoResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{59}
}

func (x *DelAllStarredRepoResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type DelAllStaringDevReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoId int64 `protobuf:"varint,1,opt,name=repoId,proto3" json:"repoId,omitempty"` // repoId
}

func (x *DelAllStaringDevReq) Reset() {
	*x = DelAllStaringDevReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelAllStaringDevReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllStaringDevReq) ProtoMessage() {}

func (x *DelAllStaringDevReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllStaringDevReq.ProtoReflect.Descriptor instead.
func (*DelAllStaringDevReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{60}
}

func (x *DelAllStaringDevReq) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type DelAllStaringDevResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *DelAllStaringDevResp) Reset() {
	*x = DelAllStaringDevResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelAllStaringDevResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllStaringDevResp) ProtoMessage() {}

func (x *DelAllStaringDevResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllStaringDevResp.ProtoReflect.Descriptor instead.
func (*DelAllStaringDevResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{61}
}

func (x *DelAllStaringDevResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type CheckIfStarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` // developerId
	RepoId      int64 `protobuf:"varint,2,opt,name=repoId,proto3" json:"repoId,omitempty"`           // repoId
}

func (x *CheckIfStarReq) Reset() {
	*x = CheckIfStarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckIfStarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIfStarReq) ProtoMessage() {}

func (x *CheckIfStarReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIfStarReq.ProtoReflect.Descriptor instead.
func (*CheckIfStarReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{62}
}

func (x *CheckIfStarReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

func (x *CheckIfStarReq) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type CheckIfStarResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base   *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	IsStar bool       `protobuf:"varint,2,opt,name=isStar,proto3" json:"isStar,omitempty"` // isStar
}

func (x *CheckIfStarResp) Reset() {
	*x = CheckIfStarResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckIfStarResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIfStarResp) ProtoMessage() {}

func (x *CheckIfStarResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIfStarResp.ProtoReflect.Descriptor instead.
func (*CheckIfStarResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{63}
}

func (x *CheckIfStarResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CheckIfStarResp) GetIsStar() bool {
	if x != nil {
		return x.IsStar
	}
	return false
}

type SearchStarredRepoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`               // page
	Limit       int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`             // limit
	DeveloperId int64 `protobuf:"varint,3,opt,name=developerId,proto3" json:"developerId,omitempty"` // developerId
}

func (x *SearchStarredRepoReq) Reset() {
	*x = SearchStarredRepoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchStarredRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchStarredRepoReq) ProtoMessage() {}

func (x *SearchStarredRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchStarredRepoReq.ProtoReflect.Descriptor instead.
func (*SearchStarredRepoReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{64}
}

func (x *SearchStarredRepoReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchStarredRepoReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchStarredRepoReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type SearchStarredRepoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base    *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	RepoIds []int64    `protobuf:"varint,2,rep,packed,name=repoIds,proto3" json:"repoIds,omitempty"` // repoId
}

func (x *SearchStarredRepoResp) Reset() {
	*x = SearchStarredRepoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchStarredRepoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchStarredRepoResp) ProtoMessage() {}

func (x *SearchStarredRepoResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchStarredRepoResp.ProtoReflect.Descriptor instead.
func (*SearchStarredRepoResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{65}
}

func (x *SearchStarredRepoResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SearchStarredRepoResp) GetRepoIds() []int64 {
	if x != nil {
		return x.RepoIds
	}
	return nil
}

type SearchStaringDevReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`     // page
	Limit  int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`   // limit
	RepoId int64 `protobuf:"varint,3,opt,name=repoId,proto3" json:"repoId,omitempty"` // repoId
}

func (x *SearchStaringDevReq) Reset() {
	*x = SearchStaringDevReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchStaringDevReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchStaringDevReq) ProtoMessage() {}

func (x *SearchStaringDevReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchStaringDevReq.ProtoReflect.Descriptor instead.
func (*SearchStaringDevReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{66}
}

func (x *SearchStaringDevReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchStaringDevReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchStaringDevReq) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type SearchStaringDevResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base         *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	DeveloperIds []int64    `protobuf:"varint,2,rep,packed,name=developerIds,proto3" json:"developerIds,omitempty"` // developerId
}

func (x *SearchStaringDevResp) Reset() {
	*x = SearchStaringDevResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchStaringDevResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchStaringDevResp) ProtoMessage() {}

func (x *SearchStaringDevResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchStaringDevResp.ProtoReflect.Descriptor instead.
func (*SearchStaringDevResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{67}
}

func (x *SearchStaringDevResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SearchStaringDevResp) GetDeveloperIds() []int64 {
	if x != nil {
		return x.DeveloperIds
	}
	return nil
}

type UpdateStarredRepoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"`
}

func (x *UpdateStarredRepoReq) Reset() {
	*x = UpdateStarredRepoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStarredRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStarredRepoReq) ProtoMessage() {}

func (x *UpdateStarredRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStarredRepoReq.ProtoReflect.Descriptor instead.
func (*UpdateStarredRepoReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{68}
}

func (x *UpdateStarredRepoReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type UpdateStarredRepoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *UpdateStarredRepoResp) Reset() {
	*x = UpdateStarredRepoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStarredRepoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStarredRepoResp) ProtoMessage() {}

func (x *UpdateStarredRepoResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStarredRepoResp.ProtoReflect.Descriptor instead.
func (*UpdateStarredRepoResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{69}
}

func (x *UpdateStarredRepoResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type GetStarredRepoUpdatedAtReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"`
}

func (x *GetStarredRepoUpdatedAtReq) Reset() {
	*x = GetStarredRepoUpdatedAtReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStarredRepoUpdatedAtReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStarredRepoUpdatedAtReq) ProtoMessage() {}

func (x *GetStarredRepoUpdatedAtReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStarredRepoUpdatedAtReq.ProtoReflect.Descriptor instead.
func (*GetStarredRepoUpdatedAtReq) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{70}
}

func (x *GetStarredRepoUpdatedAtReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type GetStarredRepoUpdatedAtResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base      *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	UpdatedAt int64      `protobuf:"varint,2,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *GetStarredRepoUpdatedAtResp) Reset() {
	*x = GetStarredRepoUpdatedAtResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_relation_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStarredRepoUpdatedAtResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStarredRepoUpdatedAtResp) ProtoMessage() {}

func (x *GetStarredRepoUpdatedAtResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_relation_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStarredRepoUpdatedAtResp.ProtoReflect.Descriptor instead.
func (*GetStarredRepoUpdatedAtResp) Descriptor() ([]byte, []int) {
	return file_idl_relation_proto_rawDescGZIP(), []int{71}
}

func (x *GetStarredRepoUpdatedAtResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetStarredRepoUpdatedAtResp) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

var File_idl_relation_proto protoreflect.FileDescriptor

var file_idl_relation_proto_rawDesc = []byte{
	0x0a, 0x12, 0x69, 0x64, 0x6c, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0e,
	0x69, 0x64, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5e,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x4c,
	0x0a, 0x10, 0x41, 0x64, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52,
	0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x11,
	0x41, 0x64, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x22, 0x2a, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x33, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x22, 0x38, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x15,
	0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x29, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64,
	0x22, 0x54, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x15, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x73, 0x22, 0x37, 0x0a,
	0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e,
	0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x3e,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5b,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x62, 0x0a, 0x06, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22,
	0x50, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x12,
	0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x22, 0x2f, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x22, 0x50, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52,
	0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x35, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x12,
	0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x22, 0x36, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x13, 0x44, 0x65,
	0x6c, 0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x22, 0x54, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x22, 0x6d, 0x0a, 0x1f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x44, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x20, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x73, 0x22, 0x6c, 0x0a,
	0x1e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x42,
	0x79, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x1f, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x42, 0x79, 0x44,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e,
	0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x64, 0x73,
	0x22, 0x36, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22,
	0x35, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x3c, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x58, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e,
	0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x66, 0x0a, 0x04,
	0x46, 0x6f, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65,
	0x70, 0x6f, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6f,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6b, 0x52, 0x65,
	0x70, 0x6f, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x72, 0x6b, 0x52,
	0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65,
	0x70, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f,
	0x72, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x66, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x0b, 0x41, 0x64,
	0x64, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x2c, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x6b, 0x52,
	0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x6f, 0x72,
	0x6b, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x46, 0x6f,
	0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x37, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c,
	0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22,
	0x30, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x22, 0x2e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x49,
	0x64, 0x22, 0x57, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65,
	0x70, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x0d, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x52, 0x0a,
	0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64,
	0x73, 0x22, 0x37, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6b, 0x52,
	0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65,
	0x70, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x0e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x3d, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x46, 0x6f, 0x72, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x58, 0x0a, 0x04, 0x53, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74,
	0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x0a, 0x41,
	0x64, 0x64, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x70,
	0x6f, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x22, 0x46, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x0b, 0x44, 0x65,
	0x6c, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x38, 0x0a, 0x14, 0x44, 0x65, 0x6c,
	0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61,
	0x72, 0x72, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x2d, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x76,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x76, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x22, 0x4a, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x53, 0x74,
	0x61, 0x72, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22,
	0x49, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x53, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53, 0x74, 0x61, 0x72, 0x22, 0x62, 0x0a, 0x14, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x51,
	0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x52,
	0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x49,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64,
	0x73, 0x22, 0x57, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x44, 0x65, 0x76, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x14, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x76, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x38, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x37, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x72, 0x65,
	0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x3e, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x32, 0xfe, 0x14, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x12, 0x1a, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x41, 0x64, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71,
	0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a,
	0x0d, 0x44, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x1a,
	0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x41, 0x6c,
	0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x1e, 0x2e, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x19, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x1d,
	0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x66, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x24, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x70, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x25,
	0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x12, 0x16, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64,
	0x64, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x12, 0x16, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4b, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44,
	0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x1c, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x41,
	0x6c, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e,
	0x67, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c,
	0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a,
	0x1d, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6c,
	0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46,
	0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12,
	0x1a, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x49, 0x66, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x75, 0x0a, 0x1c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x44, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e,
	0x67, 0x42, 0x79, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x2a, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x44, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x72, 0x0a,
	0x1b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x42,
	0x79, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x2e, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x42, 0x79, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72,
	0x42, 0x79, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4e, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4b, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x1c, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x22, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x5d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x36, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x72, 0x6b, 0x12, 0x14, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71,
	0x1a, 0x15, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x46,
	0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x46, 0x6f,
	0x72, 0x6b, 0x12, 0x14, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65,
	0x6c, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3f, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x6b, 0x12, 0x17, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x46,
	0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3c, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f,
	0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6b, 0x12, 0x17, 0x2e, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f,
	0x72, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3f, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6b, 0x12, 0x17, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x51, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x6f, 0x72, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x6f, 0x72, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x53, 0x74, 0x61, 0x72, 0x12, 0x14,
	0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x74, 0x61,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x41, 0x64, 0x64, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x07, 0x44,
	0x65, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x12, 0x14, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61,
	0x72, 0x72, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x72, 0x65,
	0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x72, 0x65,
	0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x10, 0x44, 0x65, 0x6c,
	0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x76, 0x12, 0x1d, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x53,
	0x74, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x76, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x53, 0x74,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x76, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0b,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x53, 0x74, 0x61, 0x72, 0x12, 0x18, 0x2e, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x53, 0x74,
	0x61, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x54, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x72, 0x65,
	0x64, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x52, 0x65,
	0x70, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x52, 0x65,
	0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x74, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x76, 0x12, 0x1d, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x44, 0x65, 0x76, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x69,
	0x6e, 0x67, 0x44, 0x65, 0x76, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x1e,
	0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1f,
	0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x66, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x52, 0x65, 0x70,
	0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x24, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64,
	0x52, 0x65, 0x70, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x25, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x75, 0x73, 0x68, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x35,
	0x30, 0x2f, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_idl_relation_proto_rawDescOnce sync.Once
	file_idl_relation_proto_rawDescData = file_idl_relation_proto_rawDesc
)

func file_idl_relation_proto_rawDescGZIP() []byte {
	file_idl_relation_proto_rawDescOnce.Do(func() {
		file_idl_relation_proto_rawDescData = protoimpl.X.CompressGZIP(file_idl_relation_proto_rawDescData)
	})
	return file_idl_relation_proto_rawDescData
}

var file_idl_relation_proto_msgTypes = make([]protoimpl.MessageInfo, 72)
var file_idl_relation_proto_goTypes = []interface{}{
	(*CreateRepo)(nil),                       // 0: relation.CreateRepo
	(*AddCreateRepoReq)(nil),                 // 1: relation.AddCreateRepoReq
	(*AddCreateRepoResp)(nil),                // 2: relation.AddCreateRepoResp
	(*DelCreateRepoReq)(nil),                 // 3: relation.DelCreateRepoReq
	(*DelCreateRepoResp)(nil),                // 4: relation.DelCreateRepoResp
	(*DelAllCreatedRepoReq)(nil),             // 5: relation.DelAllCreatedRepoReq
	(*DelAllCreatedRepoResp)(nil),            // 6: relation.DelAllCreatedRepoResp
	(*GetCreatorIdReq)(nil),                  // 7: relation.GetCreatorIdReq
	(*GetCreatorIdResp)(nil),                 // 8: relation.GetCreatorIdResp
	(*SearchCreatedRepoReq)(nil),             // 9: relation.SearchCreatedRepoReq
	(*SearchCreatedRepoResp)(nil),            // 10: relation.SearchCreatedRepoResp
	(*UpdateCreateRepoReq)(nil),              // 11: relation.UpdateCreateRepoReq
	(*UpdateCreateRepoResp)(nil),             // 12: relation.UpdateCreateRepoResp
	(*GetCreatedRepoUpdatedAtReq)(nil),       // 13: relation.GetCreatedRepoUpdatedAtReq
	(*GetCreatedRepoUpdatedAtResp)(nil),      // 14: relation.GetCreatedRepoUpdatedAtResp
	(*Follow)(nil),                           // 15: relation.Follow
	(*AddFollowReq)(nil),                     // 16: relation.AddFollowReq
	(*AddFollowResp)(nil),                    // 17: relation.AddFollowResp
	(*DelFollowReq)(nil),                     // 18: relation.DelFollowReq
	(*DelFollowResp)(nil),                    // 19: relation.DelFollowResp
	(*DelAllFollowerReq)(nil),                // 20: relation.DelAllFollowerReq
	(*DelAllFollowerResp)(nil),               // 21: relation.DelAllFollowerResp
	(*DelAllFollowingReq)(nil),               // 22: relation.DelAllFollowingReq
	(*DelAllFollowingResp)(nil),              // 23: relation.DelAllFollowingResp
	(*CheckIfFollowReq)(nil),                 // 24: relation.CheckIfFollowReq
	(*CheckFollowResp)(nil),                  // 25: relation.CheckFollowResp
	(*SearchFollowingByDeveloperIdReq)(nil),  // 26: relation.SearchFollowingByDeveloperIdReq
	(*SearchFollowingByDeveloperIdResp)(nil), // 27: relation.SearchFollowingByDeveloperIdResp
	(*SearchFollowerByDeveloperIdReq)(nil),   // 28: relation.SearchFollowerByDeveloperIdReq
	(*SearchFollowerByDeveloperIdResp)(nil),  // 29: relation.SearchFollowerByDeveloperIdResp
	(*UpdateFollowingReq)(nil),               // 30: relation.UpdateFollowingReq
	(*UpdateFollowingResp)(nil),              // 31: relation.UpdateFollowingResp
	(*UpdateFollowerReq)(nil),                // 32: relation.UpdateFollowerReq
	(*UpdateFollowerResp)(nil),               // 33: relation.UpdateFollowerResp
	(*GetFollowingUpdatedAtReq)(nil),         // 34: relation.GetFollowingUpdatedAtReq
	(*GetFollowingUpdatedAtResp)(nil),        // 35: relation.GetFollowingUpdatedAtResp
	(*GetFollowerUpdatedAtReq)(nil),          // 36: relation.GetFollowerUpdatedAtReq
	(*GetFollowerUpdatedAtResp)(nil),         // 37: relation.GetFollowerUpdatedAtResp
	(*Fork)(nil),                             // 38: relation.Fork
	(*AddForkReq)(nil),                       // 39: relation.AddForkReq
	(*AddForkResp)(nil),                      // 40: relation.AddForkResp
	(*DelForkReq)(nil),                       // 41: relation.DelForkReq
	(*DelForkResp)(nil),                      // 42: relation.DelForkResp
	(*DelAllForkReq)(nil),                    // 43: relation.DelAllForkReq
	(*DelAllForkResp)(nil),                   // 44: relation.DelAllForkResp
	(*GetOriginReq)(nil),                     // 45: relation.GetOriginReq
	(*GetOriginResp)(nil),                    // 46: relation.GetOriginResp
	(*SearchForkReq)(nil),                    // 47: relation.SearchForkReq
	(*SearchForkResp)(nil),                   // 48: relation.SearchForkResp
	(*UpdateForkReq)(nil),                    // 49: relation.UpdateForkReq
	(*UpdateForkResp)(nil),                   // 50: relation.UpdateForkResp
	(*GetForkUpdatedAtReq)(nil),              // 51: relation.GetForkUpdatedAtReq
	(*GetForkUpdatedAtResp)(nil),             // 52: relation.GetForkUpdatedAtResp
	(*Star)(nil),                             // 53: relation.Star
	(*AddStarReq)(nil),                       // 54: relation.AddStarReq
	(*AddStarResp)(nil),                      // 55: relation.AddStarResp
	(*DelStarReq)(nil),                       // 56: relation.DelStarReq
	(*DelStarResp)(nil),                      // 57: relation.DelStarResp
	(*DelAllStarredRepoReq)(nil),             // 58: relation.DelAllStarredRepoReq
	(*DelAllStarredRepoResp)(nil),            // 59: relation.DelAllStarredRepoResp
	(*DelAllStaringDevReq)(nil),              // 60: relation.DelAllStaringDevReq
	(*DelAllStaringDevResp)(nil),             // 61: relation.DelAllStaringDevResp
	(*CheckIfStarReq)(nil),                   // 62: relation.CheckIfStarReq
	(*CheckIfStarResp)(nil),                  // 63: relation.CheckIfStarResp
	(*SearchStarredRepoReq)(nil),             // 64: relation.SearchStarredRepoReq
	(*SearchStarredRepoResp)(nil),            // 65: relation.SearchStarredRepoResp
	(*SearchStaringDevReq)(nil),              // 66: relation.SearchStaringDevReq
	(*SearchStaringDevResp)(nil),             // 67: relation.SearchStaringDevResp
	(*UpdateStarredRepoReq)(nil),             // 68: relation.UpdateStarredRepoReq
	(*UpdateStarredRepoResp)(nil),            // 69: relation.UpdateStarredRepoResp
	(*GetStarredRepoUpdatedAtReq)(nil),       // 70: relation.GetStarredRepoUpdatedAtReq
	(*GetStarredRepoUpdatedAtResp)(nil),      // 71: relation.GetStarredRepoUpdatedAtResp
	(*base.Base)(nil),                        // 72: base.Base
}
var file_idl_relation_proto_depIdxs = []int32{
	72, // 0: relation.AddCreateRepoResp.base:type_name -> base.Base
	72, // 1: relation.DelCreateRepoResp.base:type_name -> base.Base
	72, // 2: relation.DelAllCreatedRepoResp.base:type_name -> base.Base
	72, // 3: relation.GetCreatorIdResp.base:type_name -> base.Base
	72, // 4: relation.SearchCreatedRepoResp.base:type_name -> base.Base
	72, // 5: relation.UpdateCreateRepoResp.base:type_name -> base.Base
	72, // 6: relation.GetCreatedRepoUpdatedAtResp.base:type_name -> base.Base
	72, // 7: relation.AddFollowResp.base:type_name -> base.Base
	72, // 8: relation.DelFollowResp.base:type_name -> base.Base
	72, // 9: relation.DelAllFollowerResp.base:type_name -> base.Base
	72, // 10: relation.DelAllFollowingResp.base:type_name -> base.Base
	72, // 11: relation.CheckFollowResp.base:type_name -> base.Base
	72, // 12: relation.SearchFollowingByDeveloperIdResp.base:type_name -> base.Base
	72, // 13: relation.SearchFollowerByDeveloperIdResp.base:type_name -> base.Base
	72, // 14: relation.UpdateFollowingResp.base:type_name -> base.Base
	72, // 15: relation.UpdateFollowerResp.base:type_name -> base.Base
	72, // 16: relation.GetFollowingUpdatedAtResp.base:type_name -> base.Base
	72, // 17: relation.GetFollowerUpdatedAtResp.base:type_name -> base.Base
	72, // 18: relation.AddForkResp.base:type_name -> base.Base
	72, // 19: relation.DelForkResp.base:type_name -> base.Base
	72, // 20: relation.DelAllForkResp.base:type_name -> base.Base
	72, // 21: relation.GetOriginResp.base:type_name -> base.Base
	72, // 22: relation.SearchForkResp.base:type_name -> base.Base
	72, // 23: relation.UpdateForkResp.base:type_name -> base.Base
	72, // 24: relation.GetForkUpdatedAtResp.base:type_name -> base.Base
	72, // 25: relation.AddStarResp.base:type_name -> base.Base
	72, // 26: relation.DelStarResp.base:type_name -> base.Base
	72, // 27: relation.DelAllStarredRepoResp.base:type_name -> base.Base
	72, // 28: relation.DelAllStaringDevResp.base:type_name -> base.Base
	72, // 29: relation.CheckIfStarResp.base:type_name -> base.Base
	72, // 30: relation.SearchStarredRepoResp.base:type_name -> base.Base
	72, // 31: relation.SearchStaringDevResp.base:type_name -> base.Base
	72, // 32: relation.UpdateStarredRepoResp.base:type_name -> base.Base
	72, // 33: relation.GetStarredRepoUpdatedAtResp.base:type_name -> base.Base
	1,  // 34: relation.relation.AddCreateRepo:input_type -> relation.AddCreateRepoReq
	3,  // 35: relation.relation.DelCreateRepo:input_type -> relation.DelCreateRepoReq
	5,  // 36: relation.relation.DelAllCreatedRepo:input_type -> relation.DelAllCreatedRepoReq
	7,  // 37: relation.relation.GetCreatorId:input_type -> relation.GetCreatorIdReq
	9,  // 38: relation.relation.SearchCreatedRepo:input_type -> relation.SearchCreatedRepoReq
	11, // 39: relation.relation.UpdateCreateRepo:input_type -> relation.UpdateCreateRepoReq
	13, // 40: relation.relation.GetCreatedRepoUpdatedAt:input_type -> relation.GetCreatedRepoUpdatedAtReq
	16, // 41: relation.relation.AddFollow:input_type -> relation.AddFollowReq
	18, // 42: relation.relation.DelFollow:input_type -> relation.DelFollowReq
	20, // 43: relation.relation.DelAllFollower:input_type -> relation.DelAllFollowerReq
	22, // 44: relation.relation.DelAllFollowing:input_type -> relation.DelAllFollowingReq
	24, // 45: relation.relation.CheckIfFollow:input_type -> relation.CheckIfFollowReq
	26, // 46: relation.relation.SearchFollowingByDeveloperId:input_type -> relation.SearchFollowingByDeveloperIdReq
	28, // 47: relation.relation.SearchFollowerByDeveloperId:input_type -> relation.SearchFollowerByDeveloperIdReq
	30, // 48: relation.relation.UpdateFollowing:input_type -> relation.UpdateFollowingReq
	32, // 49: relation.relation.UpdateFollower:input_type -> relation.UpdateFollowerReq
	34, // 50: relation.relation.GetFollowingUpdatedAt:input_type -> relation.GetFollowingUpdatedAtReq
	36, // 51: relation.relation.GetFollowerUpdatedAt:input_type -> relation.GetFollowerUpdatedAtReq
	39, // 52: relation.relation.AddFork:input_type -> relation.AddForkReq
	41, // 53: relation.relation.DelFork:input_type -> relation.DelForkReq
	43, // 54: relation.relation.DelAllFork:input_type -> relation.DelAllForkReq
	45, // 55: relation.relation.GetOrigin:input_type -> relation.GetOriginReq
	47, // 56: relation.relation.SearchFork:input_type -> relation.SearchForkReq
	49, // 57: relation.relation.UpdateFork:input_type -> relation.UpdateForkReq
	51, // 58: relation.relation.GetForkUpdatedAt:input_type -> relation.GetForkUpdatedAtReq
	54, // 59: relation.relation.AddStar:input_type -> relation.AddStarReq
	56, // 60: relation.relation.DelStar:input_type -> relation.DelStarReq
	58, // 61: relation.relation.DelAllStarredRepo:input_type -> relation.DelAllStarredRepoReq
	60, // 62: relation.relation.DelAllStaringDev:input_type -> relation.DelAllStaringDevReq
	62, // 63: relation.relation.CheckIfStar:input_type -> relation.CheckIfStarReq
	64, // 64: relation.relation.SearchStarredRepo:input_type -> relation.SearchStarredRepoReq
	66, // 65: relation.relation.SearchStaringDev:input_type -> relation.SearchStaringDevReq
	68, // 66: relation.relation.UpdateStarredRepo:input_type -> relation.UpdateStarredRepoReq
	70, // 67: relation.relation.GetStarredRepoUpdatedAt:input_type -> relation.GetStarredRepoUpdatedAtReq
	2,  // 68: relation.relation.AddCreateRepo:output_type -> relation.AddCreateRepoResp
	4,  // 69: relation.relation.DelCreateRepo:output_type -> relation.DelCreateRepoResp
	6,  // 70: relation.relation.DelAllCreatedRepo:output_type -> relation.DelAllCreatedRepoResp
	8,  // 71: relation.relation.GetCreatorId:output_type -> relation.GetCreatorIdResp
	10, // 72: relation.relation.SearchCreatedRepo:output_type -> relation.SearchCreatedRepoResp
	12, // 73: relation.relation.UpdateCreateRepo:output_type -> relation.UpdateCreateRepoResp
	14, // 74: relation.relation.GetCreatedRepoUpdatedAt:output_type -> relation.GetCreatedRepoUpdatedAtResp
	17, // 75: relation.relation.AddFollow:output_type -> relation.AddFollowResp
	19, // 76: relation.relation.DelFollow:output_type -> relation.DelFollowResp
	21, // 77: relation.relation.DelAllFollower:output_type -> relation.DelAllFollowerResp
	23, // 78: relation.relation.DelAllFollowing:output_type -> relation.DelAllFollowingResp
	25, // 79: relation.relation.CheckIfFollow:output_type -> relation.CheckFollowResp
	27, // 80: relation.relation.SearchFollowingByDeveloperId:output_type -> relation.SearchFollowingByDeveloperIdResp
	29, // 81: relation.relation.SearchFollowerByDeveloperId:output_type -> relation.SearchFollowerByDeveloperIdResp
	31, // 82: relation.relation.UpdateFollowing:output_type -> relation.UpdateFollowingResp
	33, // 83: relation.relation.UpdateFollower:output_type -> relation.UpdateFollowerResp
	35, // 84: relation.relation.GetFollowingUpdatedAt:output_type -> relation.GetFollowingUpdatedAtResp
	37, // 85: relation.relation.GetFollowerUpdatedAt:output_type -> relation.GetFollowerUpdatedAtResp
	40, // 86: relation.relation.AddFork:output_type -> relation.AddForkResp
	42, // 87: relation.relation.DelFork:output_type -> relation.DelForkResp
	44, // 88: relation.relation.DelAllFork:output_type -> relation.DelAllForkResp
	46, // 89: relation.relation.GetOrigin:output_type -> relation.GetOriginResp
	48, // 90: relation.relation.SearchFork:output_type -> relation.SearchForkResp
	50, // 91: relation.relation.UpdateFork:output_type -> relation.UpdateForkResp
	52, // 92: relation.relation.GetForkUpdatedAt:output_type -> relation.GetForkUpdatedAtResp
	55, // 93: relation.relation.AddStar:output_type -> relation.AddStarResp
	57, // 94: relation.relation.DelStar:output_type -> relation.DelStarResp
	59, // 95: relation.relation.DelAllStarredRepo:output_type -> relation.DelAllStarredRepoResp
	61, // 96: relation.relation.DelAllStaringDev:output_type -> relation.DelAllStaringDevResp
	63, // 97: relation.relation.CheckIfStar:output_type -> relation.CheckIfStarResp
	65, // 98: relation.relation.SearchStarredRepo:output_type -> relation.SearchStarredRepoResp
	67, // 99: relation.relation.SearchStaringDev:output_type -> relation.SearchStaringDevResp
	69, // 100: relation.relation.UpdateStarredRepo:output_type -> relation.UpdateStarredRepoResp
	71, // 101: relation.relation.GetStarredRepoUpdatedAt:output_type -> relation.GetStarredRepoUpdatedAtResp
	68, // [68:102] is the sub-list for method output_type
	34, // [34:68] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_idl_relation_proto_init() }
func file_idl_relation_proto_init() {
	if File_idl_relation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_idl_relation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRepo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCreateRepoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCreateRepoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCreateRepoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelCreateRepoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelAllCreatedRepoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelAllCreatedRepoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCreatorIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCreatorIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCreatedRepoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCreatedRepoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCreateRepoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCreateRepoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCreatedRepoUpdatedAtReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCreatedRepoUpdatedAtResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Follow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFollowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFollowResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelFollowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelFollowResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelAllFollowerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelAllFollowerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelAllFollowingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelAllFollowingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckIfFollowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckFollowResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFollowingByDeveloperIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFollowingByDeveloperIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFollowerByDeveloperIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFollowerByDeveloperIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFollowingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFollowingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFollowerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFollowerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFollowingUpdatedAtReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFollowingUpdatedAtResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFollowerUpdatedAtReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFollowerUpdatedAtResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddForkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddForkResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelForkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelForkResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelAllForkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelAllForkResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOriginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOriginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchForkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchForkResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateForkReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateForkResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetForkUpdatedAtReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetForkUpdatedAtResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Star); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStarResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelStarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelStarResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelAllStarredRepoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelAllStarredRepoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelAllStaringDevReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelAllStaringDevResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckIfStarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckIfStarResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchStarredRepoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchStarredRepoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchStaringDevReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchStaringDevResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStarredRepoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStarredRepoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStarredRepoUpdatedAtReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_relation_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStarredRepoUpdatedAtResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_idl_relation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   72,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_idl_relation_proto_goTypes,
		DependencyIndexes: file_idl_relation_proto_depIdxs,
		MessageInfos:      file_idl_relation_proto_msgTypes,
	}.Build()
	File_idl_relation_proto = out.File
	file_idl_relation_proto_rawDesc = nil
	file_idl_relation_proto_goTypes = nil
	file_idl_relation_proto_depIdxs = nil
}
