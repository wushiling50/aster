// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.19.4
// source: idl/repo.proto

package repo

import (
	base "github.com/wushiling50/aster/gen/base"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ====== Repo ======
type Repo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId                  int64  `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`                                    // dataId
	DataCreatedAt           int64  `protobuf:"varint,2,opt,name=dataCreatedAt,proto3" json:"dataCreatedAt,omitempty"`                      // dataCreatedAt
	DataUpdatedAt           int64  `protobuf:"varint,3,opt,name=dataUpdatedAt,proto3" json:"dataUpdatedAt,omitempty"`                      // dataUpdatedAt
	Id                      int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`                                            // id
	Name                    string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`                                         //n ame
	StarCount               int64  `protobuf:"varint,6,opt,name=starCount,proto3" json:"starCount,omitempty"`                              // starCount
	ForkCount               int64  `protobuf:"varint,7,opt,name=forkCount,proto3" json:"forkCount,omitempty"`                              // forkCount
	IssueCount              int64  `protobuf:"varint,8,opt,name=issueCount,proto3" json:"issueCount,omitempty"`                            // issueCount
	CommitCount             int64  `protobuf:"varint,9,opt,name=commitCount,proto3" json:"commitCount,omitempty"`                          // commitCount
	PrCount                 int64  `protobuf:"varint,10,opt,name=prCount,proto3" json:"prCount,omitempty"`                                 // prCount
	Language                string `protobuf:"bytes,11,opt,name=language,proto3" json:"language,omitempty"`                                // language
	Description             string `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`                          // description
	LastFetchForkAt         int64  `protobuf:"varint,13,opt,name=lastFetchForkAt,proto3" json:"lastFetchForkAt,omitempty"`                 // lastFetchForkAt
	LastFetchContributionAt int64  `protobuf:"varint,14,opt,name=lastFetchContributionAt,proto3" json:"lastFetchContributionAt,omitempty"` // lastFetchContributionAt
	MergedPrCount           int64  `protobuf:"varint,15,opt,name=mergedPrCount,proto3" json:"mergedPrCount,omitempty"`                     // mergedPrCount
	OpenPrCount             int64  `protobuf:"varint,16,opt,name=openPrCount,proto3" json:"openPrCount,omitempty"`                         // openPrCount
	CommentCount            int64  `protobuf:"varint,17,opt,name=commentCount,proto3" json:"commentCount,omitempty"`                       // commentCount
	ReviewCount             int64  `protobuf:"varint,18,opt,name=reviewCount,proto3" json:"reviewCount,omitempty"`                         // reviewCount
}

func (x *Repo) Reset() {
	*x = Repo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_repo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Repo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Repo) ProtoMessage() {}

func (x *Repo) ProtoReflect() protoreflect.Message {
	mi := &file_idl_repo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Repo.ProtoReflect.Descriptor instead.
func (*Repo) Descriptor() ([]byte, []int) {
	return file_idl_repo_proto_rawDescGZIP(), []int{0}
}

func (x *Repo) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *Repo) GetDataCreatedAt() int64 {
	if x != nil {
		return x.DataCreatedAt
	}
	return 0
}

func (x *Repo) GetDataUpdatedAt() int64 {
	if x != nil {
		return x.DataUpdatedAt
	}
	return 0
}

func (x *Repo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Repo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Repo) GetStarCount() int64 {
	if x != nil {
		return x.StarCount
	}
	return 0
}

func (x *Repo) GetForkCount() int64 {
	if x != nil {
		return x.ForkCount
	}
	return 0
}

func (x *Repo) GetIssueCount() int64 {
	if x != nil {
		return x.IssueCount
	}
	return 0
}

func (x *Repo) GetCommitCount() int64 {
	if x != nil {
		return x.CommitCount
	}
	return 0
}

func (x *Repo) GetPrCount() int64 {
	if x != nil {
		return x.PrCount
	}
	return 0
}

func (x *Repo) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Repo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Repo) GetLastFetchForkAt() int64 {
	if x != nil {
		return x.LastFetchForkAt
	}
	return 0
}

func (x *Repo) GetLastFetchContributionAt() int64 {
	if x != nil {
		return x.LastFetchContributionAt
	}
	return 0
}

func (x *Repo) GetMergedPrCount() int64 {
	if x != nil {
		return x.MergedPrCount
	}
	return 0
}

func (x *Repo) GetOpenPrCount() int64 {
	if x != nil {
		return x.OpenPrCount
	}
	return 0
}

func (x *Repo) GetCommentCount() int64 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *Repo) GetReviewCount() int64 {
	if x != nil {
		return x.ReviewCount
	}
	return 0
}

type AddRepoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                            // id
	Name                    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                         // name
	StarCount               int64  `protobuf:"varint,3,opt,name=starCount,proto3" json:"starCount,omitempty"`                              // starCount
	ForkCount               int64  `protobuf:"varint,4,opt,name=forkCount,proto3" json:"forkCount,omitempty"`                              // forkCount
	IssueCount              int64  `protobuf:"varint,5,opt,name=issueCount,proto3" json:"issueCount,omitempty"`                            // issueCount
	CommitCount             int64  `protobuf:"varint,6,opt,name=commitCount,proto3" json:"commitCount,omitempty"`                          // commitCount
	PrCount                 int64  `protobuf:"varint,7,opt,name=prCount,proto3" json:"prCount,omitempty"`                                  // prCount
	Language                string `protobuf:"bytes,8,opt,name=language,proto3" json:"language,omitempty"`                                 // language
	Description             string `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`                           // description
	LastFetchForkAt         int64  `protobuf:"varint,10,opt,name=lastFetchForkAt,proto3" json:"lastFetchForkAt,omitempty"`                 // lastFetchForkAt
	LastFetchContributionAt int64  `protobuf:"varint,11,opt,name=lastFetchContributionAt,proto3" json:"lastFetchContributionAt,omitempty"` // lastFetchContributionAt
	MergedPrCount           int64  `protobuf:"varint,12,opt,name=mergedPrCount,proto3" json:"mergedPrCount,omitempty"`                     // mergedPrCount
	OpenPrCount             int64  `protobuf:"varint,13,opt,name=openPrCount,proto3" json:"openPrCount,omitempty"`                         // openPrCount
	CommentCount            int64  `protobuf:"varint,14,opt,name=commentCount,proto3" json:"commentCount,omitempty"`                       // commentCount
	ReviewCount             int64  `protobuf:"varint,15,opt,name=reviewCount,proto3" json:"reviewCount,omitempty"`                         // reviewCount
}

func (x *AddRepoReq) Reset() {
	*x = AddRepoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_repo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRepoReq) ProtoMessage() {}

func (x *AddRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_repo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRepoReq.ProtoReflect.Descriptor instead.
func (*AddRepoReq) Descriptor() ([]byte, []int) {
	return file_idl_repo_proto_rawDescGZIP(), []int{1}
}

func (x *AddRepoReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddRepoReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddRepoReq) GetStarCount() int64 {
	if x != nil {
		return x.StarCount
	}
	return 0
}

func (x *AddRepoReq) GetForkCount() int64 {
	if x != nil {
		return x.ForkCount
	}
	return 0
}

func (x *AddRepoReq) GetIssueCount() int64 {
	if x != nil {
		return x.IssueCount
	}
	return 0
}

func (x *AddRepoReq) GetCommitCount() int64 {
	if x != nil {
		return x.CommitCount
	}
	return 0
}

func (x *AddRepoReq) GetPrCount() int64 {
	if x != nil {
		return x.PrCount
	}
	return 0
}

func (x *AddRepoReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *AddRepoReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddRepoReq) GetLastFetchForkAt() int64 {
	if x != nil {
		return x.LastFetchForkAt
	}
	return 0
}

func (x *AddRepoReq) GetLastFetchContributionAt() int64 {
	if x != nil {
		return x.LastFetchContributionAt
	}
	return 0
}

func (x *AddRepoReq) GetMergedPrCount() int64 {
	if x != nil {
		return x.MergedPrCount
	}
	return 0
}

func (x *AddRepoReq) GetOpenPrCount() int64 {
	if x != nil {
		return x.OpenPrCount
	}
	return 0
}

func (x *AddRepoReq) GetCommentCount() int64 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *AddRepoReq) GetReviewCount() int64 {
	if x != nil {
		return x.ReviewCount
	}
	return 0
}

type AddRepoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *AddRepoResp) Reset() {
	*x = AddRepoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_repo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRepoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRepoResp) ProtoMessage() {}

func (x *AddRepoResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_repo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRepoResp.ProtoReflect.Descriptor instead.
func (*AddRepoResp) Descriptor() ([]byte, []int) {
	return file_idl_repo_proto_rawDescGZIP(), []int{2}
}

func (x *AddRepoResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type UpdateRepoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateRepoReq) Reset() {
	*x = UpdateRepoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_repo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRepoReq) ProtoMessage() {}

func (x *UpdateRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_repo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRepoReq.ProtoReflect.Descriptor instead.
func (*UpdateRepoReq) Descriptor() ([]byte, []int) {
	return file_idl_repo_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateRepoReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateRepoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *UpdateRepoResp) Reset() {
	*x = UpdateRepoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_repo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRepoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRepoResp) ProtoMessage() {}

func (x *UpdateRepoResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_repo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRepoResp.ProtoReflect.Descriptor instead.
func (*UpdateRepoResp) Descriptor() ([]byte, []int) {
	return file_idl_repo_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateRepoResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type DelRepoByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // id
}

func (x *DelRepoByIdReq) Reset() {
	*x = DelRepoByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_repo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelRepoByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRepoByIdReq) ProtoMessage() {}

func (x *DelRepoByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_repo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRepoByIdReq.ProtoReflect.Descriptor instead.
func (*DelRepoByIdReq) Descriptor() ([]byte, []int) {
	return file_idl_repo_proto_rawDescGZIP(), []int{5}
}

func (x *DelRepoByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelRepoByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *DelRepoByIdResp) Reset() {
	*x = DelRepoByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_repo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelRepoByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelRepoByIdResp) ProtoMessage() {}

func (x *DelRepoByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_repo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelRepoByIdResp.ProtoReflect.Descriptor instead.
func (*DelRepoByIdResp) Descriptor() ([]byte, []int) {
	return file_idl_repo_proto_rawDescGZIP(), []int{6}
}

func (x *DelRepoByIdResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

type GetRepoByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // id
}

func (x *GetRepoByIdReq) Reset() {
	*x = GetRepoByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_repo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRepoByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepoByIdReq) ProtoMessage() {}

func (x *GetRepoByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_idl_repo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepoByIdReq.ProtoReflect.Descriptor instead.
func (*GetRepoByIdReq) Descriptor() ([]byte, []int) {
	return file_idl_repo_proto_rawDescGZIP(), []int{7}
}

func (x *GetRepoByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetRepoByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Base `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Repo *Repo      `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"` // repo
}

func (x *GetRepoByIdResp) Reset() {
	*x = GetRepoByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_idl_repo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRepoByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepoByIdResp) ProtoMessage() {}

func (x *GetRepoByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_idl_repo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepoByIdResp.ProtoReflect.Descriptor instead.
func (*GetRepoByIdResp) Descriptor() ([]byte, []int) {
	return file_idl_repo_proto_rawDescGZIP(), []int{8}
}

func (x *GetRepoByIdResp) GetBase() *base.Base {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetRepoByIdResp) GetRepo() *Repo {
	if x != nil {
		return x.Repo
	}
	return nil
}

var File_idl_repo_proto protoreflect.FileDescriptor

var file_idl_repo_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x69, 0x64, 0x6c, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x1a, 0x0e, 0x69, 0x64, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd6, 0x04, 0x0a, 0x04, 0x52, 0x65, 0x70, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x64, 0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x6b, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a,
	0x0f, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6b, 0x41, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x46, 0x6f, 0x72, 0x6b, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x6c, 0x61, 0x73, 0x74, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x64, 0x50, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x64,
	0x50, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x50,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x70,
	0x65, 0x6e, 0x50, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xf8, 0x03, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x70, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6b, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6b,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x17, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x6d, 0x65, 0x72, 0x67, 0x65, 0x64, 0x50, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x64, 0x50, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2d, 0x0a, 0x0b, 0x41, 0x64,
	0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x1f, 0x0a, 0x0d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x0e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x20, 0x0a, 0x0e,
	0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x31,
	0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x51, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x32, 0xe7, 0x01, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12,
	0x2e, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x10, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x72,
	0x65, 0x70, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x37, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x13, 0x2e,
	0x72, 0x65, 0x70, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52,
	0x65, 0x71, 0x1a, 0x14, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x52,
	0x65, 0x70, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x12, 0x14, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x44,
	0x65, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e,
	0x72, 0x65, 0x70, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x14, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x72, 0x65, 0x70, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77,
	0x75, 0x73, 0x68, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x35, 0x30, 0x2f, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x3b, 0x72, 0x65, 0x70, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_idl_repo_proto_rawDescOnce sync.Once
	file_idl_repo_proto_rawDescData = file_idl_repo_proto_rawDesc
)

func file_idl_repo_proto_rawDescGZIP() []byte {
	file_idl_repo_proto_rawDescOnce.Do(func() {
		file_idl_repo_proto_rawDescData = protoimpl.X.CompressGZIP(file_idl_repo_proto_rawDescData)
	})
	return file_idl_repo_proto_rawDescData
}

var file_idl_repo_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_idl_repo_proto_goTypes = []interface{}{
	(*Repo)(nil),            // 0: repo.Repo
	(*AddRepoReq)(nil),      // 1: repo.AddRepoReq
	(*AddRepoResp)(nil),     // 2: repo.AddRepoResp
	(*UpdateRepoReq)(nil),   // 3: repo.UpdateRepoReq
	(*UpdateRepoResp)(nil),  // 4: repo.UpdateRepoResp
	(*DelRepoByIdReq)(nil),  // 5: repo.DelRepoByIdReq
	(*DelRepoByIdResp)(nil), // 6: repo.DelRepoByIdResp
	(*GetRepoByIdReq)(nil),  // 7: repo.GetRepoByIdReq
	(*GetRepoByIdResp)(nil), // 8: repo.GetRepoByIdResp
	(*base.Base)(nil),       // 9: base.Base
}
var file_idl_repo_proto_depIdxs = []int32{
	9, // 0: repo.AddRepoResp.base:type_name -> base.Base
	9, // 1: repo.UpdateRepoResp.base:type_name -> base.Base
	9, // 2: repo.DelRepoByIdResp.base:type_name -> base.Base
	9, // 3: repo.GetRepoByIdResp.base:type_name -> base.Base
	0, // 4: repo.GetRepoByIdResp.repo:type_name -> repo.Repo
	1, // 5: repo.repo.AddRepo:input_type -> repo.AddRepoReq
	3, // 6: repo.repo.UpdateRepo:input_type -> repo.UpdateRepoReq
	5, // 7: repo.repo.DelRepoById:input_type -> repo.DelRepoByIdReq
	7, // 8: repo.repo.GetRepoById:input_type -> repo.GetRepoByIdReq
	2, // 9: repo.repo.AddRepo:output_type -> repo.AddRepoResp
	4, // 10: repo.repo.UpdateRepo:output_type -> repo.UpdateRepoResp
	6, // 11: repo.repo.DelRepoById:output_type -> repo.DelRepoByIdResp
	8, // 12: repo.repo.GetRepoById:output_type -> repo.GetRepoByIdResp
	9, // [9:13] is the sub-list for method output_type
	5, // [5:9] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_idl_repo_proto_init() }
func file_idl_repo_proto_init() {
	if File_idl_repo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_idl_repo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Repo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_repo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRepoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_repo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRepoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_repo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRepoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_repo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRepoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_repo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelRepoByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_repo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelRepoByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_repo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRepoByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_idl_repo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRepoByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_idl_repo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_idl_repo_proto_goTypes,
		DependencyIndexes: file_idl_repo_proto_depIdxs,
		MessageInfos:      file_idl_repo_proto_msgTypes,
	}.Build()
	File_idl_repo_proto = out.File
	file_idl_repo_proto_rawDesc = nil
	file_idl_repo_proto_goTypes = nil
	file_idl_repo_proto_depIdxs = nil
}
