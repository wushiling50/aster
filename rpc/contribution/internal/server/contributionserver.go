// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: contribution.proto

package server

import (
	"context"

	"github.com/wushiling50/aster/gen/contribution"
	"github.com/wushiling50/aster/rpc/contribution/internal/logic"
	"github.com/wushiling50/aster/rpc/contribution/internal/svc"
)

type ContributionServer struct {
	svcCtx *svc.ServiceContext
	contribution_contribution.UnimplementedContributionServer
}

func NewContributionServer(svcCtx *svc.ServiceContext) *ContributionServer {
	return &ContributionServer{
		svcCtx: svcCtx,
	}
}

func (s *ContributionServer) AddContribution(ctx context.Context, in *contribution_contribution.AddContributionReq) (*contribution_contribution.AddContributionResp, error) {
	l := logic.NewAddContributionLogic(ctx, s.svcCtx)
	return l.AddContribution(in)
}

func (s *ContributionServer) DelContribution(ctx context.Context, in *contribution_contribution.DelContributionReq) (*contribution_contribution.DelContributionResp, error) {
	l := logic.NewDelContributionLogic(ctx, s.svcCtx)
	return l.DelContribution(in)
}

func (s *ContributionServer) DelAllContributionInCategoryByUserId(ctx context.Context, in *contribution_contribution.DelAllContributionInCategoryByUserIdReq) (*contribution_contribution.DelAllContributionInCategoryByUserIdResp, error) {
	l := logic.NewDelAllContributionInCategoryByUserIdLogic(ctx, s.svcCtx)
	return l.DelAllContributionInCategoryByUserId(in)
}

func (s *ContributionServer) GetContribution(ctx context.Context, in *contribution_contribution.GetContributionReq) (*contribution_contribution.GetContributionResp, error) {
	l := logic.NewGetContributionLogic(ctx, s.svcCtx)
	return l.GetContribution(in)
}

func (s *ContributionServer) SearchByCategory(ctx context.Context, in *contribution_contribution.SearchByCategoryReq) (*contribution_contribution.SearchByCategoryResp, error) {
	l := logic.NewSearchByCategoryLogic(ctx, s.svcCtx)
	return l.SearchByCategory(in)
}

func (s *ContributionServer) SearchByUserId(ctx context.Context, in *contribution_contribution.SearchByUserIdReq) (*contribution_contribution.SearchByUserIdResp, error) {
	l := logic.NewSearchByUserIdLogic(ctx, s.svcCtx)
	return l.SearchByUserId(in)
}

func (s *ContributionServer) SearchByRepoId(ctx context.Context, in *contribution_contribution.SearchByRepoIdReq) (*contribution_contribution.SearchByRepoIdResp, error) {
	l := logic.NewSearchByRepoIdLogic(ctx, s.svcCtx)
	return l.SearchByRepoId(in)
}

func (s *ContributionServer) UpdateContributionOfUser(ctx context.Context, in *contribution_contribution.UpdateContributionOfUserReq) (*contribution_contribution.UpdateContributionOfUserResp, error) {
	l := logic.NewUpdateContributionOfUserLogic(ctx, s.svcCtx)
	return l.UpdateContributionOfUser(in)
}

func (s *ContributionServer) UpdateIssuePROfUser(ctx context.Context, in *contribution_contribution.UpdateIssuePROfUserReq) (*contribution_contribution.UpdateIssuePROfUserResp, error) {
	l := logic.NewUpdateIssuePROfUserLogic(ctx, s.svcCtx)
	return l.UpdateIssuePROfUser(in)
}

func (s *ContributionServer) UpdateCommentOfUser(ctx context.Context, in *contribution_contribution.UpdateCommentOfUserReq) (*contribution_contribution.UpdateCommentOfUserResp, error) {
	l := logic.NewUpdateCommentOfUserLogic(ctx, s.svcCtx)
	return l.UpdateCommentOfUser(in)
}

func (s *ContributionServer) UpdateReviewOfUser(ctx context.Context, in *contribution_contribution.UpdateReviewOfUserReq) (*contribution_contribution.UpdateReviewOfUserResp, error) {
	l := logic.NewUpdateReviewOfUserLogic(ctx, s.svcCtx)
	return l.UpdateReviewOfUser(in)
}

func (s *ContributionServer) GetIssuePROfUserUpdatedAt(ctx context.Context, in *contribution_contribution.GetIssuePROfUserUpdatedAtReq) (*contribution_contribution.GetIssuePROfUserUpdatedAtResp, error) {
	l := logic.NewGetIssuePROfUserUpdatedAtLogic(ctx, s.svcCtx)
	return l.GetIssuePROfUserUpdatedAt(in)
}

func (s *ContributionServer) GetCommentOfUserUpdatedAt(ctx context.Context, in *contribution_contribution.GetCommentOfUserUpdatedAtReq) (*contribution_contribution.GetCommentOfUserUpdatedAtResp, error) {
	l := logic.NewGetCommentOfUserUpdatedAtLogic(ctx, s.svcCtx)
	return l.GetCommentOfUserUpdatedAt(in)
}

func (s *ContributionServer) GetReviewOfUserUpdatedAt(ctx context.Context, in *contribution_contribution.GetReviewOfUserUpdatedAtReq) (*contribution_contribution.GetReviewOfUserUpdatedAtResp, error) {
	l := logic.NewGetReviewOfUserUpdatedAtLogic(ctx, s.svcCtx)
	return l.GetReviewOfUserUpdatedAt(in)
}
