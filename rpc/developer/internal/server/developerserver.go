// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: developer.proto

package server

import (
	"context"

	"github.com/wushiling50/aster/gen/developer"
	"github.com/wushiling50/aster/rpc/developer/internal/logic"
	"github.com/wushiling50/aster/rpc/developer/internal/svc"
)

type DeveloperServer struct {
	svcCtx *svc.ServiceContext
	developer.UnimplementedDeveloperServer
}

func NewDeveloperServer(svcCtx *svc.ServiceContext) *DeveloperServer {
	return &DeveloperServer{
		svcCtx: svcCtx,
	}
}

func (s *DeveloperServer) AddDeveloper(ctx context.Context, in *developer.AddDeveloperReq) (*developer.AddDeveloperResp, error) {
	l := logic.NewAddDeveloperLogic(ctx, s.svcCtx)
	return l.AddDeveloper(in)
}

func (s *DeveloperServer) UpdateDeveloper(ctx context.Context, in *developer.UpdateDeveloperReq) (*developer.UpdateDeveloperResp, error) {
	l := logic.NewUpdateDeveloperLogic(ctx, s.svcCtx)
	return l.UpdateDeveloper(in)
}

func (s *DeveloperServer) DelDeveloperById(ctx context.Context, in *developer.DelDeveloperByIdReq) (*developer.DelDeveloperByIdResp, error) {
	l := logic.NewDelDeveloperByIdLogic(ctx, s.svcCtx)
	return l.DelDeveloperById(in)
}

func (s *DeveloperServer) DelDeveloperByLogin(ctx context.Context, in *developer.DelDeveloperByLoginReq) (*developer.DelDeveloperByLoginResp, error) {
	l := logic.NewDelDeveloperByLoginLogic(ctx, s.svcCtx)
	return l.DelDeveloperByLogin(in)
}

func (s *DeveloperServer) GetDeveloperById(ctx context.Context, in *developer.GetDeveloperByIdReq) (*developer.GetDeveloperByIdResp, error) {
	l := logic.NewGetDeveloperByIdLogic(ctx, s.svcCtx)
	return l.GetDeveloperById(in)
}

func (s *DeveloperServer) GetDeveloperByLogin(ctx context.Context, in *developer.GetDeveloperByLoginReq) (*developer.GetDeveloperByLoginResp, error) {
	l := logic.NewGetDeveloperByLoginLogic(ctx, s.svcCtx)
	return l.GetDeveloperByLogin(in)
}
