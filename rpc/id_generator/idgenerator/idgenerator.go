// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: id_generator.proto

package idgenerator

import (
	"context"

	"github.com/wushiling50/aster/gen/id_generator"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetIdReq  = id_generator_id_generator.GetIdReq
	GetIdResp = id_generator_id_generator.GetIdResp

	IdGenerator interface {
		GetId(ctx context.Context, in *GetIdReq, opts ...grpc.CallOption) (*GetIdResp, error)
	}

	defaultIdGenerator struct {
		cli zrpc.Client
	}
)

func NewIdGenerator(cli zrpc.Client) IdGenerator {
	return &defaultIdGenerator{
		cli: cli,
	}
}

func (m *defaultIdGenerator) GetId(ctx context.Context, in *GetIdReq, opts ...grpc.CallOption) (*GetIdResp, error) {
	client := id_generator_id_generator.NewIdGeneratorClient(m.cli.Conn())
	return client.GetId(ctx, in, opts...)
}
