// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: repo.proto

package server

import (
	"context"

	"github.com/wushiling50/aster/gen/repo"
	"github.com/wushiling50/aster/rpc/repo/internal/logic"
	"github.com/wushiling50/aster/rpc/repo/internal/svc"
)

type RepoServer struct {
	svcCtx *svc.ServiceContext
	repo_repo.UnimplementedRepoServer
}

func NewRepoServer(svcCtx *svc.ServiceContext) *RepoServer {
	return &RepoServer{
		svcCtx: svcCtx,
	}
}

func (s *RepoServer) AddRepo(ctx context.Context, in *repo_repo.AddRepoReq) (*repo_repo.AddRepoResp, error) {
	l := logic.NewAddRepoLogic(ctx, s.svcCtx)
	return l.AddRepo(in)
}

func (s *RepoServer) UpdateRepo(ctx context.Context, in *repo_repo.UpdateRepoReq) (*repo_repo.UpdateRepoResp, error) {
	l := logic.NewUpdateRepoLogic(ctx, s.svcCtx)
	return l.UpdateRepo(in)
}

func (s *RepoServer) DelRepoById(ctx context.Context, in *repo_repo.DelRepoByIdReq) (*repo_repo.DelRepoByIdResp, error) {
	l := logic.NewDelRepoByIdLogic(ctx, s.svcCtx)
	return l.DelRepoById(in)
}

func (s *RepoServer) GetRepoById(ctx context.Context, in *repo_repo.GetRepoByIdReq) (*repo_repo.GetRepoByIdResp, error) {
	l := logic.NewGetRepoByIdLogic(ctx, s.svcCtx)
	return l.GetRepoById(in)
}
